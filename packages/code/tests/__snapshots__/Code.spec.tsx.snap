// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Code Basic render 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": .c4 {
  visibility: hidden;
  cursor: pointer;
  color: hsla(215,19%,35%,1);
  border: 1px solid hsla(215,20%,65%,1);
  background-color: hsla(213,27%,84%,1);
  position: absolute;
  top: 0.5rem;
  right: 0.5rem;
  height: 1.8rem;
  width: 1.8rem;
  padding: 0.25rem;
  border-radius: 4px;
}

.c0 {
  overflow: auto;
  position: relative;
}

.c0:hover .c3 {
  visibility: visible;
}

.c1 {
  overflow: auto;
  padding: 1rem;
  line-height: 1.45;
  font-family: ui-monospace,SFMono-Regular,SF Mono,Menlo,Consolas,Liberation Mono,monospace;
  font-size: 1rem;
  border-radius: 0.5rem;
  background-color: hsla(214,32%,91%,1);
}

.c2 {
  position: absolute;
  top: 0.8rem;
  right: 2.6rem;
  font-size: 0.6rem;
  border-radius: 5px;
  padding: 6px 8px;
  -webkit-transition: opacity 0.3s;
  transition: opacity 0.3s;
  opacity: 0;
  color: hsla(0,0%,90%,1);
  background-color: hsla(0,0%,15%,1);
}

.c2::after {
  content: '';
  position: absolute;
  left: 100%;
  top: 50%;
  margin-top: -5px;
  border-width: 5px;
  border-style: solid;
  border-color: transparent transparent transparent hsla(0,0%,15%,1);
}

<body>
    <div>
      <div
        class="c0"
        role="contentinfo"
      >
        <pre
          class="c1"
        >
          import React from 'react';
import { TidyUiProvider, orchidLight, ... } from '@tidy-ui/commons;'

function App() {
  return &lt;TidyUiProvider theme={orchidLight}&gt;...&lt;/TidyUiProvider&gt;;
}

export default App;

        </pre>
        <div
          class="c2"
          data-testid="copy-success-tooltip"
          role="tooltip"
        >
          Copied
        </div>
        <svg
          aria-hidden="true"
          class="c3 c4"
          data-testid="copy-code-btn"
          fill="currentColor"
          focusable="false"
          role="button"
          viewBox="0 0 24 24"
          xmlns="http://www.w3.org/2000/svg"
        >
          <path
            d="M18 2H9c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h9c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zm0 14H9V4h9v12zM3 15v-2h2v2H3zm0-5.5h2v2H3v-2zM10 20h2v2h-2v-2zm-7-1.5v-2h2v2H3zM5 22c-1.1 0-2-.9-2-2h2v2zm3.5 0h-2v-2h2v2zm5 0v-2h2c0 1.1-.9 2-2 2zM5 6v2H3c0-1.1.9-2 2-2z"
          />
        </svg>
      </div>
    </div>
  </body>,
  "container": .c4 {
  visibility: hidden;
  cursor: pointer;
  color: hsla(215,19%,35%,1);
  border: 1px solid hsla(215,20%,65%,1);
  background-color: hsla(213,27%,84%,1);
  position: absolute;
  top: 0.5rem;
  right: 0.5rem;
  height: 1.8rem;
  width: 1.8rem;
  padding: 0.25rem;
  border-radius: 4px;
}

.c0 {
  overflow: auto;
  position: relative;
}

.c0:hover .c3 {
  visibility: visible;
}

.c1 {
  overflow: auto;
  padding: 1rem;
  line-height: 1.45;
  font-family: ui-monospace,SFMono-Regular,SF Mono,Menlo,Consolas,Liberation Mono,monospace;
  font-size: 1rem;
  border-radius: 0.5rem;
  background-color: hsla(214,32%,91%,1);
}

.c2 {
  position: absolute;
  top: 0.8rem;
  right: 2.6rem;
  font-size: 0.6rem;
  border-radius: 5px;
  padding: 6px 8px;
  -webkit-transition: opacity 0.3s;
  transition: opacity 0.3s;
  opacity: 0;
  color: hsla(0,0%,90%,1);
  background-color: hsla(0,0%,15%,1);
}

.c2::after {
  content: '';
  position: absolute;
  left: 100%;
  top: 50%;
  margin-top: -5px;
  border-width: 5px;
  border-style: solid;
  border-color: transparent transparent transparent hsla(0,0%,15%,1);
}

<div>
    <div
      class="c0"
      role="contentinfo"
    >
      <pre
        class="c1"
      >
        import React from 'react';
import { TidyUiProvider, orchidLight, ... } from '@tidy-ui/commons;'

function App() {
  return &lt;TidyUiProvider theme={orchidLight}&gt;...&lt;/TidyUiProvider&gt;;
}

export default App;

      </pre>
      <div
        class="c2"
        data-testid="copy-success-tooltip"
        role="tooltip"
      >
        Copied
      </div>
      <svg
        aria-hidden="true"
        class="c3 c4"
        data-testid="copy-code-btn"
        fill="currentColor"
        focusable="false"
        role="button"
        viewBox="0 0 24 24"
        xmlns="http://www.w3.org/2000/svg"
      >
        <path
          d="M18 2H9c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h9c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zm0 14H9V4h9v12zM3 15v-2h2v2H3zm0-5.5h2v2H3v-2zM10 20h2v2h-2v-2zm-7-1.5v-2h2v2H3zM5 22c-1.1 0-2-.9-2-2h2v2zm3.5 0h-2v-2h2v2zm5 0v-2h2c0 1.1-.9 2-2 2zM5 6v2H3c0-1.1.9-2 2-2z"
        />
      </svg>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`Code Copy success status 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": .c4 {
  visibility: hidden;
  cursor: pointer;
  color: hsla(215,19%,35%,1);
  border: 1px solid hsla(215,20%,65%,1);
  background-color: hsla(213,27%,84%,1);
  position: absolute;
  top: 0.5rem;
  right: 0.5rem;
  height: 1.8rem;
  width: 1.8rem;
  padding: 0.25rem;
  border-radius: 4px;
}

.c0 {
  overflow: auto;
  position: relative;
}

.c0:hover .c3 {
  visibility: visible;
}

.c1 {
  overflow: auto;
  padding: 1rem;
  line-height: 1.45;
  font-family: ui-monospace,SFMono-Regular,SF Mono,Menlo,Consolas,Liberation Mono,monospace;
  font-size: 1rem;
  border-radius: 0.5rem;
  background-color: hsla(214,32%,91%,1);
}

.c2 {
  position: absolute;
  top: 0.8rem;
  right: 2.6rem;
  font-size: 0.6rem;
  border-radius: 5px;
  padding: 6px 8px;
  -webkit-transition: opacity 0.3s;
  transition: opacity 0.3s;
  opacity: 0;
  color: hsla(0,0%,90%,1);
  background-color: hsla(0,0%,15%,1);
}

.c2::after {
  content: '';
  position: absolute;
  left: 100%;
  top: 50%;
  margin-top: -5px;
  border-width: 5px;
  border-style: solid;
  border-color: transparent transparent transparent hsla(0,0%,15%,1);
}

<body>
    <div>
      <div
        class="c0"
        role="contentinfo"
      >
        <pre
          class="c1"
        >
          sample
        </pre>
        <div
          class="c2"
          data-testid="copy-success-tooltip"
          role="tooltip"
        >
          Copied
        </div>
        <svg
          aria-hidden="true"
          class="c3 c4"
          data-testid="copy-code-btn"
          fill="currentColor"
          focusable="false"
          role="button"
          viewBox="0 0 24 24"
          xmlns="http://www.w3.org/2000/svg"
        >
          <path
            d="M18 2H9c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h9c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zm0 14H9V4h9v12zM3 15v-2h2v2H3zm0-5.5h2v2H3v-2zM10 20h2v2h-2v-2zm-7-1.5v-2h2v2H3zM5 22c-1.1 0-2-.9-2-2h2v2zm3.5 0h-2v-2h2v2zm5 0v-2h2c0 1.1-.9 2-2 2zM5 6v2H3c0-1.1.9-2 2-2z"
          />
        </svg>
      </div>
    </div>
  </body>,
  "container": .c4 {
  visibility: hidden;
  cursor: pointer;
  color: hsla(215,19%,35%,1);
  border: 1px solid hsla(215,20%,65%,1);
  background-color: hsla(213,27%,84%,1);
  position: absolute;
  top: 0.5rem;
  right: 0.5rem;
  height: 1.8rem;
  width: 1.8rem;
  padding: 0.25rem;
  border-radius: 4px;
}

.c0 {
  overflow: auto;
  position: relative;
}

.c0:hover .c3 {
  visibility: visible;
}

.c1 {
  overflow: auto;
  padding: 1rem;
  line-height: 1.45;
  font-family: ui-monospace,SFMono-Regular,SF Mono,Menlo,Consolas,Liberation Mono,monospace;
  font-size: 1rem;
  border-radius: 0.5rem;
  background-color: hsla(214,32%,91%,1);
}

.c2 {
  position: absolute;
  top: 0.8rem;
  right: 2.6rem;
  font-size: 0.6rem;
  border-radius: 5px;
  padding: 6px 8px;
  -webkit-transition: opacity 0.3s;
  transition: opacity 0.3s;
  opacity: 0;
  color: hsla(0,0%,90%,1);
  background-color: hsla(0,0%,15%,1);
}

.c2::after {
  content: '';
  position: absolute;
  left: 100%;
  top: 50%;
  margin-top: -5px;
  border-width: 5px;
  border-style: solid;
  border-color: transparent transparent transparent hsla(0,0%,15%,1);
}

<div>
    <div
      class="c0"
      role="contentinfo"
    >
      <pre
        class="c1"
      >
        sample
      </pre>
      <div
        class="c2"
        data-testid="copy-success-tooltip"
        role="tooltip"
      >
        Copied
      </div>
      <svg
        aria-hidden="true"
        class="c3 c4"
        data-testid="copy-code-btn"
        fill="currentColor"
        focusable="false"
        role="button"
        viewBox="0 0 24 24"
        xmlns="http://www.w3.org/2000/svg"
      >
        <path
          d="M18 2H9c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h9c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zm0 14H9V4h9v12zM3 15v-2h2v2H3zm0-5.5h2v2H3v-2zM10 20h2v2h-2v-2zm-7-1.5v-2h2v2H3zM5 22c-1.1 0-2-.9-2-2h2v2zm3.5 0h-2v-2h2v2zm5 0v-2h2c0 1.1-.9 2-2 2zM5 6v2H3c0-1.1.9-2 2-2z"
        />
      </svg>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`Code Copy success status dark mode 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": .c4 {
  visibility: hidden;
  cursor: pointer;
  color: hsla(213,27%,84%,1);
  border: 1px solid hsla(215,19%,35%,1);
  background-color: hsla(215,25%,27%,1);
  position: absolute;
  top: 0.5rem;
  right: 0.5rem;
  height: 1.8rem;
  width: 1.8rem;
  padding: 0.25rem;
  border-radius: 4px;
}

.c0 {
  overflow: auto;
  position: relative;
}

.c0:hover .c3 {
  visibility: visible;
}

.c1 {
  overflow: auto;
  padding: 1rem;
  line-height: 1.45;
  font-family: ui-monospace,SFMono-Regular,SF Mono,Menlo,Consolas,Liberation Mono,monospace;
  font-size: 1rem;
  border-radius: 0.5rem;
  background-color: hsla(215,25%,27%,1);
}

.c2 {
  position: absolute;
  top: 0.8rem;
  right: 2.6rem;
  font-size: 0.6rem;
  border-radius: 5px;
  padding: 6px 8px;
  -webkit-transition: opacity 0.3s;
  transition: opacity 0.3s;
  opacity: 0;
  color: hsla(0,0%,90%,1);
  background-color: hsla(0,0%,45%,1);
}

.c2::after {
  content: '';
  position: absolute;
  left: 100%;
  top: 50%;
  margin-top: -5px;
  border-width: 5px;
  border-style: solid;
  border-color: transparent transparent transparent hsla(0,0%,45%,1);
}

<body>
    <div>
      <div
        class="c0"
        role="contentinfo"
      >
        <pre
          class="c1"
        >
          sample
        </pre>
        <div
          class="c2"
          data-testid="copy-success-tooltip"
          role="tooltip"
        >
          Copied
        </div>
        <svg
          aria-hidden="true"
          class="c3 c4"
          data-testid="copy-code-btn"
          fill="currentColor"
          focusable="false"
          role="button"
          viewBox="0 0 24 24"
          xmlns="http://www.w3.org/2000/svg"
        >
          <path
            d="M18 2H9c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h9c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zm0 14H9V4h9v12zM3 15v-2h2v2H3zm0-5.5h2v2H3v-2zM10 20h2v2h-2v-2zm-7-1.5v-2h2v2H3zM5 22c-1.1 0-2-.9-2-2h2v2zm3.5 0h-2v-2h2v2zm5 0v-2h2c0 1.1-.9 2-2 2zM5 6v2H3c0-1.1.9-2 2-2z"
          />
        </svg>
      </div>
    </div>
  </body>,
  "container": .c4 {
  visibility: hidden;
  cursor: pointer;
  color: hsla(213,27%,84%,1);
  border: 1px solid hsla(215,19%,35%,1);
  background-color: hsla(215,25%,27%,1);
  position: absolute;
  top: 0.5rem;
  right: 0.5rem;
  height: 1.8rem;
  width: 1.8rem;
  padding: 0.25rem;
  border-radius: 4px;
}

.c0 {
  overflow: auto;
  position: relative;
}

.c0:hover .c3 {
  visibility: visible;
}

.c1 {
  overflow: auto;
  padding: 1rem;
  line-height: 1.45;
  font-family: ui-monospace,SFMono-Regular,SF Mono,Menlo,Consolas,Liberation Mono,monospace;
  font-size: 1rem;
  border-radius: 0.5rem;
  background-color: hsla(215,25%,27%,1);
}

.c2 {
  position: absolute;
  top: 0.8rem;
  right: 2.6rem;
  font-size: 0.6rem;
  border-radius: 5px;
  padding: 6px 8px;
  -webkit-transition: opacity 0.3s;
  transition: opacity 0.3s;
  opacity: 0;
  color: hsla(0,0%,90%,1);
  background-color: hsla(0,0%,45%,1);
}

.c2::after {
  content: '';
  position: absolute;
  left: 100%;
  top: 50%;
  margin-top: -5px;
  border-width: 5px;
  border-style: solid;
  border-color: transparent transparent transparent hsla(0,0%,45%,1);
}

<div>
    <div
      class="c0"
      role="contentinfo"
    >
      <pre
        class="c1"
      >
        sample
      </pre>
      <div
        class="c2"
        data-testid="copy-success-tooltip"
        role="tooltip"
      >
        Copied
      </div>
      <svg
        aria-hidden="true"
        class="c3 c4"
        data-testid="copy-code-btn"
        fill="currentColor"
        focusable="false"
        role="button"
        viewBox="0 0 24 24"
        xmlns="http://www.w3.org/2000/svg"
      >
        <path
          d="M18 2H9c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h9c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zm0 14H9V4h9v12zM3 15v-2h2v2H3zm0-5.5h2v2H3v-2zM10 20h2v2h-2v-2zm-7-1.5v-2h2v2H3zM5 22c-1.1 0-2-.9-2-2h2v2zm3.5 0h-2v-2h2v2zm5 0v-2h2c0 1.1-.9 2-2 2zM5 6v2H3c0-1.1.9-2 2-2z"
        />
      </svg>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`Code Copy to clipboard with granted permission 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": .c4 {
  visibility: hidden;
  cursor: pointer;
  color: hsla(215,19%,35%,1);
  border: 1px solid hsla(215,20%,65%,1);
  background-color: hsla(213,27%,84%,1);
  position: absolute;
  top: 0.5rem;
  right: 0.5rem;
  height: 1.8rem;
  width: 1.8rem;
  padding: 0.25rem;
  border-radius: 4px;
}

.c0 {
  overflow: auto;
  position: relative;
}

.c0:hover .c3 {
  visibility: visible;
}

.c1 {
  overflow: auto;
  padding: 1rem;
  line-height: 1.45;
  font-family: ui-monospace,SFMono-Regular,SF Mono,Menlo,Consolas,Liberation Mono,monospace;
  font-size: 1rem;
  border-radius: 0.5rem;
  background-color: hsla(214,32%,91%,1);
}

.c2 {
  position: absolute;
  top: 0.8rem;
  right: 2.6rem;
  font-size: 0.6rem;
  border-radius: 5px;
  padding: 6px 8px;
  -webkit-transition: opacity 0.3s;
  transition: opacity 0.3s;
  opacity: 0;
  color: hsla(0,0%,90%,1);
  background-color: hsla(0,0%,15%,1);
}

.c2::after {
  content: '';
  position: absolute;
  left: 100%;
  top: 50%;
  margin-top: -5px;
  border-width: 5px;
  border-style: solid;
  border-color: transparent transparent transparent hsla(0,0%,15%,1);
}

<body>
    <div>
      <div
        class="c0"
        role="contentinfo"
      >
        <pre
          class="c1"
        >
          sample
        </pre>
        <div
          class="c2"
          data-testid="copy-success-tooltip"
          role="tooltip"
        >
          Copied
        </div>
        <svg
          aria-hidden="true"
          class="c3 c4"
          data-testid="copy-code-btn"
          fill="currentColor"
          focusable="false"
          role="button"
          viewBox="0 0 24 24"
          xmlns="http://www.w3.org/2000/svg"
        >
          <path
            d="M18 2H9c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h9c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zm0 14H9V4h9v12zM3 15v-2h2v2H3zm0-5.5h2v2H3v-2zM10 20h2v2h-2v-2zm-7-1.5v-2h2v2H3zM5 22c-1.1 0-2-.9-2-2h2v2zm3.5 0h-2v-2h2v2zm5 0v-2h2c0 1.1-.9 2-2 2zM5 6v2H3c0-1.1.9-2 2-2z"
          />
        </svg>
      </div>
    </div>
  </body>,
  "container": .c4 {
  visibility: hidden;
  cursor: pointer;
  color: hsla(215,19%,35%,1);
  border: 1px solid hsla(215,20%,65%,1);
  background-color: hsla(213,27%,84%,1);
  position: absolute;
  top: 0.5rem;
  right: 0.5rem;
  height: 1.8rem;
  width: 1.8rem;
  padding: 0.25rem;
  border-radius: 4px;
}

.c0 {
  overflow: auto;
  position: relative;
}

.c0:hover .c3 {
  visibility: visible;
}

.c1 {
  overflow: auto;
  padding: 1rem;
  line-height: 1.45;
  font-family: ui-monospace,SFMono-Regular,SF Mono,Menlo,Consolas,Liberation Mono,monospace;
  font-size: 1rem;
  border-radius: 0.5rem;
  background-color: hsla(214,32%,91%,1);
}

.c2 {
  position: absolute;
  top: 0.8rem;
  right: 2.6rem;
  font-size: 0.6rem;
  border-radius: 5px;
  padding: 6px 8px;
  -webkit-transition: opacity 0.3s;
  transition: opacity 0.3s;
  opacity: 0;
  color: hsla(0,0%,90%,1);
  background-color: hsla(0,0%,15%,1);
}

.c2::after {
  content: '';
  position: absolute;
  left: 100%;
  top: 50%;
  margin-top: -5px;
  border-width: 5px;
  border-style: solid;
  border-color: transparent transparent transparent hsla(0,0%,15%,1);
}

<div>
    <div
      class="c0"
      role="contentinfo"
    >
      <pre
        class="c1"
      >
        sample
      </pre>
      <div
        class="c2"
        data-testid="copy-success-tooltip"
        role="tooltip"
      >
        Copied
      </div>
      <svg
        aria-hidden="true"
        class="c3 c4"
        data-testid="copy-code-btn"
        fill="currentColor"
        focusable="false"
        role="button"
        viewBox="0 0 24 24"
        xmlns="http://www.w3.org/2000/svg"
      >
        <path
          d="M18 2H9c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h9c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zm0 14H9V4h9v12zM3 15v-2h2v2H3zm0-5.5h2v2H3v-2zM10 20h2v2h-2v-2zm-7-1.5v-2h2v2H3zM5 22c-1.1 0-2-.9-2-2h2v2zm3.5 0h-2v-2h2v2zm5 0v-2h2c0 1.1-.9 2-2 2zM5 6v2H3c0-1.1.9-2 2-2z"
        />
      </svg>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`Code Copy to clipboard with prompt permission 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": .c4 {
  visibility: hidden;
  cursor: pointer;
  color: hsla(215,19%,35%,1);
  border: 1px solid hsla(215,20%,65%,1);
  background-color: hsla(213,27%,84%,1);
  position: absolute;
  top: 0.5rem;
  right: 0.5rem;
  height: 1.8rem;
  width: 1.8rem;
  padding: 0.25rem;
  border-radius: 4px;
}

.c0 {
  overflow: auto;
  position: relative;
}

.c0:hover .c3 {
  visibility: visible;
}

.c1 {
  overflow: auto;
  padding: 1rem;
  line-height: 1.45;
  font-family: ui-monospace,SFMono-Regular,SF Mono,Menlo,Consolas,Liberation Mono,monospace;
  font-size: 1rem;
  border-radius: 0.5rem;
  background-color: hsla(214,32%,91%,1);
}

.c2 {
  position: absolute;
  top: 0.8rem;
  right: 2.6rem;
  font-size: 0.6rem;
  border-radius: 5px;
  padding: 6px 8px;
  -webkit-transition: opacity 0.3s;
  transition: opacity 0.3s;
  opacity: 0;
  color: hsla(0,0%,90%,1);
  background-color: hsla(0,0%,15%,1);
}

.c2::after {
  content: '';
  position: absolute;
  left: 100%;
  top: 50%;
  margin-top: -5px;
  border-width: 5px;
  border-style: solid;
  border-color: transparent transparent transparent hsla(0,0%,15%,1);
}

<body>
    <div>
      <div
        class="c0"
        role="contentinfo"
      >
        <pre
          class="c1"
        >
          sample
        </pre>
        <div
          class="c2"
          data-testid="copy-success-tooltip"
          role="tooltip"
        >
          Copied
        </div>
        <svg
          aria-hidden="true"
          class="c3 c4"
          data-testid="copy-code-btn"
          fill="currentColor"
          focusable="false"
          role="button"
          viewBox="0 0 24 24"
          xmlns="http://www.w3.org/2000/svg"
        >
          <path
            d="M18 2H9c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h9c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zm0 14H9V4h9v12zM3 15v-2h2v2H3zm0-5.5h2v2H3v-2zM10 20h2v2h-2v-2zm-7-1.5v-2h2v2H3zM5 22c-1.1 0-2-.9-2-2h2v2zm3.5 0h-2v-2h2v2zm5 0v-2h2c0 1.1-.9 2-2 2zM5 6v2H3c0-1.1.9-2 2-2z"
          />
        </svg>
      </div>
    </div>
  </body>,
  "container": .c4 {
  visibility: hidden;
  cursor: pointer;
  color: hsla(215,19%,35%,1);
  border: 1px solid hsla(215,20%,65%,1);
  background-color: hsla(213,27%,84%,1);
  position: absolute;
  top: 0.5rem;
  right: 0.5rem;
  height: 1.8rem;
  width: 1.8rem;
  padding: 0.25rem;
  border-radius: 4px;
}

.c0 {
  overflow: auto;
  position: relative;
}

.c0:hover .c3 {
  visibility: visible;
}

.c1 {
  overflow: auto;
  padding: 1rem;
  line-height: 1.45;
  font-family: ui-monospace,SFMono-Regular,SF Mono,Menlo,Consolas,Liberation Mono,monospace;
  font-size: 1rem;
  border-radius: 0.5rem;
  background-color: hsla(214,32%,91%,1);
}

.c2 {
  position: absolute;
  top: 0.8rem;
  right: 2.6rem;
  font-size: 0.6rem;
  border-radius: 5px;
  padding: 6px 8px;
  -webkit-transition: opacity 0.3s;
  transition: opacity 0.3s;
  opacity: 0;
  color: hsla(0,0%,90%,1);
  background-color: hsla(0,0%,15%,1);
}

.c2::after {
  content: '';
  position: absolute;
  left: 100%;
  top: 50%;
  margin-top: -5px;
  border-width: 5px;
  border-style: solid;
  border-color: transparent transparent transparent hsla(0,0%,15%,1);
}

<div>
    <div
      class="c0"
      role="contentinfo"
    >
      <pre
        class="c1"
      >
        sample
      </pre>
      <div
        class="c2"
        data-testid="copy-success-tooltip"
        role="tooltip"
      >
        Copied
      </div>
      <svg
        aria-hidden="true"
        class="c3 c4"
        data-testid="copy-code-btn"
        fill="currentColor"
        focusable="false"
        role="button"
        viewBox="0 0 24 24"
        xmlns="http://www.w3.org/2000/svg"
      >
        <path
          d="M18 2H9c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h9c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zm0 14H9V4h9v12zM3 15v-2h2v2H3zm0-5.5h2v2H3v-2zM10 20h2v2h-2v-2zm-7-1.5v-2h2v2H3zM5 22c-1.1 0-2-.9-2-2h2v2zm3.5 0h-2v-2h2v2zm5 0v-2h2c0 1.1-.9 2-2 2zM5 6v2H3c0-1.1.9-2 2-2z"
        />
      </svg>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`Code Dark mode basic render 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": .c4 {
  visibility: hidden;
  cursor: pointer;
  color: hsla(213,27%,84%,1);
  border: 1px solid hsla(215,19%,35%,1);
  background-color: hsla(215,25%,27%,1);
  position: absolute;
  top: 0.5rem;
  right: 0.5rem;
  height: 1.8rem;
  width: 1.8rem;
  padding: 0.25rem;
  border-radius: 4px;
}

.c0 {
  overflow: auto;
  position: relative;
}

.c0:hover .c3 {
  visibility: visible;
}

.c1 {
  overflow: auto;
  padding: 1rem;
  line-height: 1.45;
  font-family: ui-monospace,SFMono-Regular,SF Mono,Menlo,Consolas,Liberation Mono,monospace;
  font-size: 1rem;
  border-radius: 0.5rem;
  background-color: hsla(215,25%,27%,1);
}

.c2 {
  position: absolute;
  top: 0.8rem;
  right: 2.6rem;
  font-size: 0.6rem;
  border-radius: 5px;
  padding: 6px 8px;
  -webkit-transition: opacity 0.3s;
  transition: opacity 0.3s;
  opacity: 0;
  color: hsla(0,0%,90%,1);
  background-color: hsla(0,0%,45%,1);
}

.c2::after {
  content: '';
  position: absolute;
  left: 100%;
  top: 50%;
  margin-top: -5px;
  border-width: 5px;
  border-style: solid;
  border-color: transparent transparent transparent hsla(0,0%,45%,1);
}

<body>
    <div>
      <div
        class="c0"
        role="contentinfo"
      >
        <pre
          class="c1"
        >
          import React from 'react';
import { TidyUiProvider, orchidLight, ... } from '@tidy-ui/commons;'

function App() {
  return &lt;TidyUiProvider theme={orchidLight}&gt;...&lt;/TidyUiProvider&gt;;
}

export default App;

        </pre>
        <div
          class="c2"
          data-testid="copy-success-tooltip"
          role="tooltip"
        >
          Copied
        </div>
        <svg
          aria-hidden="true"
          class="c3 c4"
          data-testid="copy-code-btn"
          fill="currentColor"
          focusable="false"
          role="button"
          viewBox="0 0 24 24"
          xmlns="http://www.w3.org/2000/svg"
        >
          <path
            d="M18 2H9c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h9c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zm0 14H9V4h9v12zM3 15v-2h2v2H3zm0-5.5h2v2H3v-2zM10 20h2v2h-2v-2zm-7-1.5v-2h2v2H3zM5 22c-1.1 0-2-.9-2-2h2v2zm3.5 0h-2v-2h2v2zm5 0v-2h2c0 1.1-.9 2-2 2zM5 6v2H3c0-1.1.9-2 2-2z"
          />
        </svg>
      </div>
    </div>
  </body>,
  "container": .c4 {
  visibility: hidden;
  cursor: pointer;
  color: hsla(213,27%,84%,1);
  border: 1px solid hsla(215,19%,35%,1);
  background-color: hsla(215,25%,27%,1);
  position: absolute;
  top: 0.5rem;
  right: 0.5rem;
  height: 1.8rem;
  width: 1.8rem;
  padding: 0.25rem;
  border-radius: 4px;
}

.c0 {
  overflow: auto;
  position: relative;
}

.c0:hover .c3 {
  visibility: visible;
}

.c1 {
  overflow: auto;
  padding: 1rem;
  line-height: 1.45;
  font-family: ui-monospace,SFMono-Regular,SF Mono,Menlo,Consolas,Liberation Mono,monospace;
  font-size: 1rem;
  border-radius: 0.5rem;
  background-color: hsla(215,25%,27%,1);
}

.c2 {
  position: absolute;
  top: 0.8rem;
  right: 2.6rem;
  font-size: 0.6rem;
  border-radius: 5px;
  padding: 6px 8px;
  -webkit-transition: opacity 0.3s;
  transition: opacity 0.3s;
  opacity: 0;
  color: hsla(0,0%,90%,1);
  background-color: hsla(0,0%,45%,1);
}

.c2::after {
  content: '';
  position: absolute;
  left: 100%;
  top: 50%;
  margin-top: -5px;
  border-width: 5px;
  border-style: solid;
  border-color: transparent transparent transparent hsla(0,0%,45%,1);
}

<div>
    <div
      class="c0"
      role="contentinfo"
    >
      <pre
        class="c1"
      >
        import React from 'react';
import { TidyUiProvider, orchidLight, ... } from '@tidy-ui/commons;'

function App() {
  return &lt;TidyUiProvider theme={orchidLight}&gt;...&lt;/TidyUiProvider&gt;;
}

export default App;

      </pre>
      <div
        class="c2"
        data-testid="copy-success-tooltip"
        role="tooltip"
      >
        Copied
      </div>
      <svg
        aria-hidden="true"
        class="c3 c4"
        data-testid="copy-code-btn"
        fill="currentColor"
        focusable="false"
        role="button"
        viewBox="0 0 24 24"
        xmlns="http://www.w3.org/2000/svg"
      >
        <path
          d="M18 2H9c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h9c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zm0 14H9V4h9v12zM3 15v-2h2v2H3zm0-5.5h2v2H3v-2zM10 20h2v2h-2v-2zm-7-1.5v-2h2v2H3zM5 22c-1.1 0-2-.9-2-2h2v2zm3.5 0h-2v-2h2v2zm5 0v-2h2c0 1.1-.9 2-2 2zM5 6v2H3c0-1.1.9-2 2-2z"
        />
      </svg>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`Code Empty value Empty text value 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": .c4 {
  visibility: hidden;
  cursor: pointer;
  color: hsla(215,19%,35%,1);
  border: 1px solid hsla(215,20%,65%,1);
  background-color: hsla(213,27%,84%,1);
  position: absolute;
  top: 0.5rem;
  right: 0.5rem;
  height: 1.8rem;
  width: 1.8rem;
  padding: 0.25rem;
  border-radius: 4px;
}

.c0 {
  overflow: auto;
  position: relative;
}

.c0:hover .c3 {
  visibility: visible;
}

.c1 {
  overflow: auto;
  padding: 1rem;
  line-height: 1.45;
  font-family: ui-monospace,SFMono-Regular,SF Mono,Menlo,Consolas,Liberation Mono,monospace;
  font-size: 1rem;
  border-radius: 0.5rem;
  background-color: hsla(214,32%,91%,1);
}

.c2 {
  position: absolute;
  top: 0.8rem;
  right: 2.6rem;
  font-size: 0.6rem;
  border-radius: 5px;
  padding: 6px 8px;
  -webkit-transition: opacity 0.3s;
  transition: opacity 0.3s;
  opacity: 0;
  color: hsla(0,0%,90%,1);
  background-color: hsla(0,0%,15%,1);
}

.c2::after {
  content: '';
  position: absolute;
  left: 100%;
  top: 50%;
  margin-top: -5px;
  border-width: 5px;
  border-style: solid;
  border-color: transparent transparent transparent hsla(0,0%,15%,1);
}

<body>
    <div>
      <div
        class="c0"
        role="contentinfo"
      >
        <pre
          class="c1"
        />
        <div
          class="c2"
          data-testid="copy-success-tooltip"
          role="tooltip"
        >
          Copied
        </div>
        <svg
          aria-hidden="true"
          class="c3 c4"
          data-testid="copy-code-btn"
          fill="currentColor"
          focusable="false"
          role="button"
          viewBox="0 0 24 24"
          xmlns="http://www.w3.org/2000/svg"
        >
          <path
            d="M18 2H9c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h9c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zm0 14H9V4h9v12zM3 15v-2h2v2H3zm0-5.5h2v2H3v-2zM10 20h2v2h-2v-2zm-7-1.5v-2h2v2H3zM5 22c-1.1 0-2-.9-2-2h2v2zm3.5 0h-2v-2h2v2zm5 0v-2h2c0 1.1-.9 2-2 2zM5 6v2H3c0-1.1.9-2 2-2z"
          />
        </svg>
      </div>
    </div>
  </body>,
  "container": .c4 {
  visibility: hidden;
  cursor: pointer;
  color: hsla(215,19%,35%,1);
  border: 1px solid hsla(215,20%,65%,1);
  background-color: hsla(213,27%,84%,1);
  position: absolute;
  top: 0.5rem;
  right: 0.5rem;
  height: 1.8rem;
  width: 1.8rem;
  padding: 0.25rem;
  border-radius: 4px;
}

.c0 {
  overflow: auto;
  position: relative;
}

.c0:hover .c3 {
  visibility: visible;
}

.c1 {
  overflow: auto;
  padding: 1rem;
  line-height: 1.45;
  font-family: ui-monospace,SFMono-Regular,SF Mono,Menlo,Consolas,Liberation Mono,monospace;
  font-size: 1rem;
  border-radius: 0.5rem;
  background-color: hsla(214,32%,91%,1);
}

.c2 {
  position: absolute;
  top: 0.8rem;
  right: 2.6rem;
  font-size: 0.6rem;
  border-radius: 5px;
  padding: 6px 8px;
  -webkit-transition: opacity 0.3s;
  transition: opacity 0.3s;
  opacity: 0;
  color: hsla(0,0%,90%,1);
  background-color: hsla(0,0%,15%,1);
}

.c2::after {
  content: '';
  position: absolute;
  left: 100%;
  top: 50%;
  margin-top: -5px;
  border-width: 5px;
  border-style: solid;
  border-color: transparent transparent transparent hsla(0,0%,15%,1);
}

<div>
    <div
      class="c0"
      role="contentinfo"
    >
      <pre
        class="c1"
      />
      <div
        class="c2"
        data-testid="copy-success-tooltip"
        role="tooltip"
      >
        Copied
      </div>
      <svg
        aria-hidden="true"
        class="c3 c4"
        data-testid="copy-code-btn"
        fill="currentColor"
        focusable="false"
        role="button"
        viewBox="0 0 24 24"
        xmlns="http://www.w3.org/2000/svg"
      >
        <path
          d="M18 2H9c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h9c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zm0 14H9V4h9v12zM3 15v-2h2v2H3zm0-5.5h2v2H3v-2zM10 20h2v2h-2v-2zm-7-1.5v-2h2v2H3zM5 22c-1.1 0-2-.9-2-2h2v2zm3.5 0h-2v-2h2v2zm5 0v-2h2c0 1.1-.9 2-2 2zM5 6v2H3c0-1.1.9-2 2-2z"
        />
      </svg>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`Code Without copy button 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": .c0 {
  overflow: auto;
  position: relative;
}

.c1 {
  overflow: auto;
  padding: 1rem;
  line-height: 1.45;
  font-family: ui-monospace,SFMono-Regular,SF Mono,Menlo,Consolas,Liberation Mono,monospace;
  font-size: 1rem;
  border-radius: 0.5rem;
  background-color: hsla(214,32%,91%,1);
}

<body>
    <div>
      <div
        class="c0"
        role="contentinfo"
      >
        <pre
          class="c1"
        >
          import React from 'react';
import { TidyUiProvider, orchidLight, ... } from '@tidy-ui/commons;'

function App() {
  return &lt;TidyUiProvider theme={orchidLight}&gt;...&lt;/TidyUiProvider&gt;;
}

export default App;

        </pre>
      </div>
    </div>
  </body>,
  "container": .c0 {
  overflow: auto;
  position: relative;
}

.c1 {
  overflow: auto;
  padding: 1rem;
  line-height: 1.45;
  font-family: ui-monospace,SFMono-Regular,SF Mono,Menlo,Consolas,Liberation Mono,monospace;
  font-size: 1rem;
  border-radius: 0.5rem;
  background-color: hsla(214,32%,91%,1);
}

<div>
    <div
      class="c0"
      role="contentinfo"
    >
      <pre
        class="c1"
      >
        import React from 'react';
import { TidyUiProvider, orchidLight, ... } from '@tidy-ui/commons;'

function App() {
  return &lt;TidyUiProvider theme={orchidLight}&gt;...&lt;/TidyUiProvider&gt;;
}

export default App;

      </pre>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;
