// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Checkbox Basic render 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": .c0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  gap: 0.5em;
  vertical-align: middle;
  cursor: pointer;
}

.c1 {
  border: 0;
  -webkit-clip: rect(0 0 0 0);
  clip: rect(0 0 0 0);
  -webkit-clip-path: inset(50%);
  clip-path: inset(50%);
  height: 1px;
  margin: -1px;
  overflow: hidden;
  padding: 0;
  position: absolute;
  white-space: nowrap;
  width: 1px;
}

.c4 {
  fill: none;
  stroke-width: 3px;
}

.c2 {
  display: inline-block;
  -webkit-transition: all 150ms;
  transition: all 150ms;
  border: 1px solid hsla(215,20%,65%,1);
  border-radius: calc(0.2em * 1);
  width: calc(1em * 1);
  height: calc(1em * 1);
}

.c2 .c3 {
  visibility: hidden;
}

<body>
    <div>
      <label
        class="c0"
        role="checkbox"
      >
        <input
          class="c1"
          type="checkbox"
        />
        <div
          class="c2"
        >
          <svg
            class="c3 c4"
            viewBox="0 0 24 24"
          >
            <polyline
              points="20 6 9 17 4 12"
            />
          </svg>
        </div>
        basic
      </label>
    </div>
  </body>,
  "container": .c0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  gap: 0.5em;
  vertical-align: middle;
  cursor: pointer;
}

.c1 {
  border: 0;
  -webkit-clip: rect(0 0 0 0);
  clip: rect(0 0 0 0);
  -webkit-clip-path: inset(50%);
  clip-path: inset(50%);
  height: 1px;
  margin: -1px;
  overflow: hidden;
  padding: 0;
  position: absolute;
  white-space: nowrap;
  width: 1px;
}

.c4 {
  fill: none;
  stroke-width: 3px;
}

.c2 {
  display: inline-block;
  -webkit-transition: all 150ms;
  transition: all 150ms;
  border: 1px solid hsla(215,20%,65%,1);
  border-radius: calc(0.2em * 1);
  width: calc(1em * 1);
  height: calc(1em * 1);
}

.c2 .c3 {
  visibility: hidden;
}

<div>
    <label
      class="c0"
      role="checkbox"
    >
      <input
        class="c1"
        type="checkbox"
      />
      <div
        class="c2"
      >
        <svg
          class="c3 c4"
          viewBox="0 0 24 24"
        >
          <polyline
            points="20 6 9 17 4 12"
          />
        </svg>
      </div>
      basic
    </label>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`Checkbox Checked 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": .c0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  gap: 0.5em;
  vertical-align: middle;
  cursor: pointer;
}

.c1 {
  border: 0;
  -webkit-clip: rect(0 0 0 0);
  clip: rect(0 0 0 0);
  -webkit-clip-path: inset(50%);
  clip-path: inset(50%);
  height: 1px;
  margin: -1px;
  overflow: hidden;
  padding: 0;
  position: absolute;
  white-space: nowrap;
  width: 1px;
}

.c4 {
  fill: none;
  stroke-width: 3px;
}

.c2 {
  display: inline-block;
  -webkit-transition: all 150ms;
  transition: all 150ms;
  border: 1px solid hsla(217,91%,60%,1);
  border-radius: calc(0.2em * 1);
  width: calc(1em * 1);
  height: calc(1em * 1);
}

.c2 .c3 {
  visibility: visible;
  stroke: hsla(217,91%,60%,1);
}

<body>
    <div>
      <label
        class="c0"
        role="checkbox"
      >
        <input
          class="c1"
          type="checkbox"
        />
        <div
          class="c2"
        >
          <svg
            class="c3 c4"
            viewBox="0 0 24 24"
          >
            <polyline
              points="20 6 9 17 4 12"
            />
          </svg>
        </div>
        basic
      </label>
    </div>
  </body>,
  "container": .c0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  gap: 0.5em;
  vertical-align: middle;
  cursor: pointer;
}

.c1 {
  border: 0;
  -webkit-clip: rect(0 0 0 0);
  clip: rect(0 0 0 0);
  -webkit-clip-path: inset(50%);
  clip-path: inset(50%);
  height: 1px;
  margin: -1px;
  overflow: hidden;
  padding: 0;
  position: absolute;
  white-space: nowrap;
  width: 1px;
}

.c4 {
  fill: none;
  stroke-width: 3px;
}

.c2 {
  display: inline-block;
  -webkit-transition: all 150ms;
  transition: all 150ms;
  border: 1px solid hsla(217,91%,60%,1);
  border-radius: calc(0.2em * 1);
  width: calc(1em * 1);
  height: calc(1em * 1);
}

.c2 .c3 {
  visibility: visible;
  stroke: hsla(217,91%,60%,1);
}

<div>
    <label
      class="c0"
      role="checkbox"
    >
      <input
        class="c1"
        type="checkbox"
      />
      <div
        class="c2"
      >
        <svg
          class="c3 c4"
          viewBox="0 0 24 24"
        >
          <polyline
            points="20 6 9 17 4 12"
          />
        </svg>
      </div>
      basic
    </label>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`Checkbox Custom element 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": .c0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  gap: 0.5em;
  vertical-align: middle;
  cursor: pointer;
}

.c1 {
  border: 0;
  -webkit-clip: rect(0 0 0 0);
  clip: rect(0 0 0 0);
  -webkit-clip-path: inset(50%);
  clip-path: inset(50%);
  height: 1px;
  margin: -1px;
  overflow: hidden;
  padding: 0;
  position: absolute;
  white-space: nowrap;
  width: 1px;
}

.c4 {
  fill: none;
  stroke-width: 3px;
}

.c5 .c3 {
  visibility: hidden;
}

.c2 {
  display: inline-block;
  -webkit-transition: all 150ms;
  transition: all 150ms;
  border: 1px solid hsla(215,20%,65%,1);
  border-radius: calc(0.2em * 1);
  width: calc(1em * 1);
  height: calc(1em * 1);
}

.c2 .c3 {
  visibility: hidden;
}

<body>
    <div>
      <label
        class="c0"
        role="checkbox"
      >
        <input
          class="c1"
          type="checkbox"
        />
        <div
          class="c2"
        >
          <svg
            class="c3 c4"
            viewBox="0 0 24 24"
          >
            <polyline
              points="20 6 9 17 4 12"
            />
          </svg>
        </div>
        <div>
          basic
        </div>
      </label>
    </div>
  </body>,
  "container": .c0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  gap: 0.5em;
  vertical-align: middle;
  cursor: pointer;
}

.c1 {
  border: 0;
  -webkit-clip: rect(0 0 0 0);
  clip: rect(0 0 0 0);
  -webkit-clip-path: inset(50%);
  clip-path: inset(50%);
  height: 1px;
  margin: -1px;
  overflow: hidden;
  padding: 0;
  position: absolute;
  white-space: nowrap;
  width: 1px;
}

.c4 {
  fill: none;
  stroke-width: 3px;
}

.c5 .c3 {
  visibility: hidden;
}

.c2 {
  display: inline-block;
  -webkit-transition: all 150ms;
  transition: all 150ms;
  border: 1px solid hsla(215,20%,65%,1);
  border-radius: calc(0.2em * 1);
  width: calc(1em * 1);
  height: calc(1em * 1);
}

.c2 .c3 {
  visibility: hidden;
}

<div>
    <label
      class="c0"
      role="checkbox"
    >
      <input
        class="c1"
        type="checkbox"
      />
      <div
        class="c2"
      >
        <svg
          class="c3 c4"
          viewBox="0 0 24 24"
        >
          <polyline
            points="20 6 9 17 4 12"
          />
        </svg>
      </div>
      <div>
        basic
      </div>
    </label>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`Checkbox Dark mode basic render 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": .c0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  gap: 0.5em;
  vertical-align: middle;
  cursor: pointer;
}

.c1 {
  border: 0;
  -webkit-clip: rect(0 0 0 0);
  clip: rect(0 0 0 0);
  -webkit-clip-path: inset(50%);
  clip-path: inset(50%);
  height: 1px;
  margin: -1px;
  overflow: hidden;
  padding: 0;
  position: absolute;
  white-space: nowrap;
  width: 1px;
}

.c4 {
  fill: none;
  stroke-width: 3px;
}

.c5 .c3 {
  visibility: hidden;
}

.c2 {
  display: inline-block;
  -webkit-transition: all 150ms;
  transition: all 150ms;
  border: 1px solid hsla(215,19%,35%,1);
  border-radius: calc(0.2em * 1);
  width: calc(1em * 1);
  height: calc(1em * 1);
}

.c2 .c3 {
  visibility: hidden;
}

<body>
    <div>
      <label
        class="c0"
        role="checkbox"
      >
        <input
          class="c1"
          type="checkbox"
        />
        <div
          class="c2"
        >
          <svg
            class="c3 c4"
            viewBox="0 0 24 24"
          >
            <polyline
              points="20 6 9 17 4 12"
            />
          </svg>
        </div>
        basic
      </label>
    </div>
  </body>,
  "container": .c0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  gap: 0.5em;
  vertical-align: middle;
  cursor: pointer;
}

.c1 {
  border: 0;
  -webkit-clip: rect(0 0 0 0);
  clip: rect(0 0 0 0);
  -webkit-clip-path: inset(50%);
  clip-path: inset(50%);
  height: 1px;
  margin: -1px;
  overflow: hidden;
  padding: 0;
  position: absolute;
  white-space: nowrap;
  width: 1px;
}

.c4 {
  fill: none;
  stroke-width: 3px;
}

.c5 .c3 {
  visibility: hidden;
}

.c2 {
  display: inline-block;
  -webkit-transition: all 150ms;
  transition: all 150ms;
  border: 1px solid hsla(215,19%,35%,1);
  border-radius: calc(0.2em * 1);
  width: calc(1em * 1);
  height: calc(1em * 1);
}

.c2 .c3 {
  visibility: hidden;
}

<div>
    <label
      class="c0"
      role="checkbox"
    >
      <input
        class="c1"
        type="checkbox"
      />
      <div
        class="c2"
      >
        <svg
          class="c3 c4"
          viewBox="0 0 24 24"
        >
          <polyline
            points="20 6 9 17 4 12"
          />
        </svg>
      </div>
      basic
    </label>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`Checkbox Disabled 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": .c0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  gap: 0.5em;
  vertical-align: middle;
  cursor: pointer;
  pointer-events: none;
  cursor: not-allowed;
  opacity: 0.6;
  -webkit-transition: none;
  transition: none;
}

.c1 {
  border: 0;
  -webkit-clip: rect(0 0 0 0);
  clip: rect(0 0 0 0);
  -webkit-clip-path: inset(50%);
  clip-path: inset(50%);
  height: 1px;
  margin: -1px;
  overflow: hidden;
  padding: 0;
  position: absolute;
  white-space: nowrap;
  width: 1px;
}

.c4 {
  fill: none;
  stroke-width: 3px;
}

.c2 {
  display: inline-block;
  -webkit-transition: all 150ms;
  transition: all 150ms;
  border: 1px solid hsla(215,20%,65%,1);
  border-radius: calc(0.2em * 1);
  width: calc(1em * 1);
  height: calc(1em * 1);
}

.c2 .c3 {
  visibility: hidden;
}

<body>
    <div>
      <label
        class="c0"
        disabled=""
        role="checkbox"
      >
        <input
          class="c1"
          type="checkbox"
        />
        <div
          class="c2"
        >
          <svg
            class="c3 c4"
            viewBox="0 0 24 24"
          >
            <polyline
              points="20 6 9 17 4 12"
            />
          </svg>
        </div>
        basic
      </label>
    </div>
  </body>,
  "container": .c0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  gap: 0.5em;
  vertical-align: middle;
  cursor: pointer;
  pointer-events: none;
  cursor: not-allowed;
  opacity: 0.6;
  -webkit-transition: none;
  transition: none;
}

.c1 {
  border: 0;
  -webkit-clip: rect(0 0 0 0);
  clip: rect(0 0 0 0);
  -webkit-clip-path: inset(50%);
  clip-path: inset(50%);
  height: 1px;
  margin: -1px;
  overflow: hidden;
  padding: 0;
  position: absolute;
  white-space: nowrap;
  width: 1px;
}

.c4 {
  fill: none;
  stroke-width: 3px;
}

.c2 {
  display: inline-block;
  -webkit-transition: all 150ms;
  transition: all 150ms;
  border: 1px solid hsla(215,20%,65%,1);
  border-radius: calc(0.2em * 1);
  width: calc(1em * 1);
  height: calc(1em * 1);
}

.c2 .c3 {
  visibility: hidden;
}

<div>
    <label
      class="c0"
      disabled=""
      role="checkbox"
    >
      <input
        class="c1"
        type="checkbox"
      />
      <div
        class="c2"
      >
        <svg
          class="c3 c4"
          viewBox="0 0 24 24"
        >
          <polyline
            points="20 6 9 17 4 12"
          />
        </svg>
      </div>
      basic
    </label>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`Checkbox Filled and checked 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": .c0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  gap: 0.5em;
  vertical-align: middle;
  cursor: pointer;
}

.c1 {
  border: 0;
  -webkit-clip: rect(0 0 0 0);
  clip: rect(0 0 0 0);
  -webkit-clip-path: inset(50%);
  clip-path: inset(50%);
  height: 1px;
  margin: -1px;
  overflow: hidden;
  padding: 0;
  position: absolute;
  white-space: nowrap;
  width: 1px;
}

.c4 {
  fill: none;
  stroke-width: 3px;
}

.c2 {
  display: inline-block;
  -webkit-transition: all 150ms;
  transition: all 150ms;
  background-color: hsla(217,91%,60%,1);
  border-radius: calc(0.2em * 1);
  width: calc(1em * 1);
  height: calc(1em * 1);
}

.c2 .c3 {
  visibility: visible;
  stroke: hsla(214,95%,93%,1);
}

<body>
    <div>
      <label
        class="c0"
        role="checkbox"
      >
        <input
          class="c1"
          type="checkbox"
        />
        <div
          class="c2"
        >
          <svg
            class="c3 c4"
            viewBox="0 0 24 24"
          >
            <polyline
              points="20 6 9 17 4 12"
            />
          </svg>
        </div>
        basic
      </label>
    </div>
  </body>,
  "container": .c0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  gap: 0.5em;
  vertical-align: middle;
  cursor: pointer;
}

.c1 {
  border: 0;
  -webkit-clip: rect(0 0 0 0);
  clip: rect(0 0 0 0);
  -webkit-clip-path: inset(50%);
  clip-path: inset(50%);
  height: 1px;
  margin: -1px;
  overflow: hidden;
  padding: 0;
  position: absolute;
  white-space: nowrap;
  width: 1px;
}

.c4 {
  fill: none;
  stroke-width: 3px;
}

.c2 {
  display: inline-block;
  -webkit-transition: all 150ms;
  transition: all 150ms;
  background-color: hsla(217,91%,60%,1);
  border-radius: calc(0.2em * 1);
  width: calc(1em * 1);
  height: calc(1em * 1);
}

.c2 .c3 {
  visibility: visible;
  stroke: hsla(214,95%,93%,1);
}

<div>
    <label
      class="c0"
      role="checkbox"
    >
      <input
        class="c1"
        type="checkbox"
      />
      <div
        class="c2"
      >
        <svg
          class="c3 c4"
          viewBox="0 0 24 24"
        >
          <polyline
            points="20 6 9 17 4 12"
          />
        </svg>
      </div>
      basic
    </label>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`Checkbox Filled checkbox in dark 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": .c0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  gap: 0.5em;
  vertical-align: middle;
  cursor: pointer;
}

.c1 {
  border: 0;
  -webkit-clip: rect(0 0 0 0);
  clip: rect(0 0 0 0);
  -webkit-clip-path: inset(50%);
  clip-path: inset(50%);
  height: 1px;
  margin: -1px;
  overflow: hidden;
  padding: 0;
  position: absolute;
  white-space: nowrap;
  width: 1px;
}

.c4 {
  fill: none;
  stroke-width: 3px;
}

.c5 .c3 {
  visibility: hidden;
}

.c2 {
  display: inline-block;
  -webkit-transition: all 150ms;
  transition: all 150ms;
  background-color: hsla(215,25%,27%,1);
  border-radius: calc(0.2em * 1);
  width: calc(1em * 1);
  height: calc(1em * 1);
}

.c2 .c3 {
  visibility: hidden;
}

<body>
    <div>
      <label
        class="c0"
        role="checkbox"
      >
        <input
          class="c1"
          type="checkbox"
        />
        <div
          class="c2"
        >
          <svg
            class="c3 c4"
            viewBox="0 0 24 24"
          >
            <polyline
              points="20 6 9 17 4 12"
            />
          </svg>
        </div>
        basic
      </label>
    </div>
  </body>,
  "container": .c0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  gap: 0.5em;
  vertical-align: middle;
  cursor: pointer;
}

.c1 {
  border: 0;
  -webkit-clip: rect(0 0 0 0);
  clip: rect(0 0 0 0);
  -webkit-clip-path: inset(50%);
  clip-path: inset(50%);
  height: 1px;
  margin: -1px;
  overflow: hidden;
  padding: 0;
  position: absolute;
  white-space: nowrap;
  width: 1px;
}

.c4 {
  fill: none;
  stroke-width: 3px;
}

.c5 .c3 {
  visibility: hidden;
}

.c2 {
  display: inline-block;
  -webkit-transition: all 150ms;
  transition: all 150ms;
  background-color: hsla(215,25%,27%,1);
  border-radius: calc(0.2em * 1);
  width: calc(1em * 1);
  height: calc(1em * 1);
}

.c2 .c3 {
  visibility: hidden;
}

<div>
    <label
      class="c0"
      role="checkbox"
    >
      <input
        class="c1"
        type="checkbox"
      />
      <div
        class="c2"
      >
        <svg
          class="c3 c4"
          viewBox="0 0 24 24"
        >
          <polyline
            points="20 6 9 17 4 12"
          />
        </svg>
      </div>
      basic
    </label>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`Checkbox Indeterminate 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": .c0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  gap: 0.5em;
  vertical-align: middle;
  cursor: pointer;
}

.c1 {
  border: 0;
  -webkit-clip: rect(0 0 0 0);
  clip: rect(0 0 0 0);
  -webkit-clip-path: inset(50%);
  clip-path: inset(50%);
  height: 1px;
  margin: -1px;
  overflow: hidden;
  padding: 0;
  position: absolute;
  white-space: nowrap;
  width: 1px;
}

.c4 {
  fill: none;
  stroke-width: 3px;
}

.c2 {
  display: inline-block;
  -webkit-transition: all 150ms;
  transition: all 150ms;
  border: 1px solid hsla(217,91%,60%,1);
  border-radius: calc(0.2em * 1);
  width: calc(1em * 1);
  height: calc(1em * 1);
}

.c2 .c3 {
  visibility: visible;
  stroke: hsla(217,91%,60%,1);
}

<body>
    <div>
      <label
        class="c0"
        role="checkbox"
      >
        <input
          class="c1"
          type="checkbox"
        />
        <div
          class="c2"
        >
          <svg
            class="c3 c4"
            viewBox="0 0 24 24"
          >
            <path
              d="M19 13H5v-2h14v2z"
            />
          </svg>
        </div>
        basic
      </label>
    </div>
  </body>,
  "container": .c0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  gap: 0.5em;
  vertical-align: middle;
  cursor: pointer;
}

.c1 {
  border: 0;
  -webkit-clip: rect(0 0 0 0);
  clip: rect(0 0 0 0);
  -webkit-clip-path: inset(50%);
  clip-path: inset(50%);
  height: 1px;
  margin: -1px;
  overflow: hidden;
  padding: 0;
  position: absolute;
  white-space: nowrap;
  width: 1px;
}

.c4 {
  fill: none;
  stroke-width: 3px;
}

.c2 {
  display: inline-block;
  -webkit-transition: all 150ms;
  transition: all 150ms;
  border: 1px solid hsla(217,91%,60%,1);
  border-radius: calc(0.2em * 1);
  width: calc(1em * 1);
  height: calc(1em * 1);
}

.c2 .c3 {
  visibility: visible;
  stroke: hsla(217,91%,60%,1);
}

<div>
    <label
      class="c0"
      role="checkbox"
    >
      <input
        class="c1"
        type="checkbox"
      />
      <div
        class="c2"
      >
        <svg
          class="c3 c4"
          viewBox="0 0 24 24"
        >
          <path
            d="M19 13H5v-2h14v2z"
          />
        </svg>
      </div>
      basic
    </label>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`Checkbox Variants 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": .c0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  gap: 0.5em;
  vertical-align: middle;
  cursor: pointer;
}

.c1 {
  border: 0;
  -webkit-clip: rect(0 0 0 0);
  clip: rect(0 0 0 0);
  -webkit-clip-path: inset(50%);
  clip-path: inset(50%);
  height: 1px;
  margin: -1px;
  overflow: hidden;
  padding: 0;
  position: absolute;
  white-space: nowrap;
  width: 1px;
}

.c4 {
  fill: none;
  stroke-width: 3px;
}

.c2 {
  display: inline-block;
  -webkit-transition: all 150ms;
  transition: all 150ms;
  border: 1px solid hsla(215,20%,65%,1);
  border-radius: calc(0.2em * 1);
  width: calc(1em * 1);
  height: calc(1em * 1);
}

.c2 .c3 {
  visibility: hidden;
}

.c5 {
  display: inline-block;
  -webkit-transition: all 150ms;
  transition: all 150ms;
  background-color: hsla(213,27%,84%,1);
  border-radius: calc(0.2em * 1);
  width: calc(1em * 1);
  height: calc(1em * 1);
}

.c5 .c3 {
  visibility: hidden;
}

<body>
    <div>
      <label
        class="c0"
        role="checkbox"
      >
        <input
          class="c1"
          type="checkbox"
        />
        <div
          class="c2"
        >
          <svg
            class="c3 c4"
            viewBox="0 0 24 24"
          >
            <polyline
              points="20 6 9 17 4 12"
            />
          </svg>
        </div>
        basic
      </label>
      <label
        class="c0"
        role="checkbox"
      >
        <input
          class="c1"
          type="checkbox"
        />
        <div
          class="c5"
        >
          <svg
            class="c3 c4"
            viewBox="0 0 24 24"
          >
            <polyline
              points="20 6 9 17 4 12"
            />
          </svg>
        </div>
        basic
      </label>
    </div>
  </body>,
  "container": .c0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  gap: 0.5em;
  vertical-align: middle;
  cursor: pointer;
}

.c1 {
  border: 0;
  -webkit-clip: rect(0 0 0 0);
  clip: rect(0 0 0 0);
  -webkit-clip-path: inset(50%);
  clip-path: inset(50%);
  height: 1px;
  margin: -1px;
  overflow: hidden;
  padding: 0;
  position: absolute;
  white-space: nowrap;
  width: 1px;
}

.c4 {
  fill: none;
  stroke-width: 3px;
}

.c2 {
  display: inline-block;
  -webkit-transition: all 150ms;
  transition: all 150ms;
  border: 1px solid hsla(215,20%,65%,1);
  border-radius: calc(0.2em * 1);
  width: calc(1em * 1);
  height: calc(1em * 1);
}

.c2 .c3 {
  visibility: hidden;
}

.c5 {
  display: inline-block;
  -webkit-transition: all 150ms;
  transition: all 150ms;
  background-color: hsla(213,27%,84%,1);
  border-radius: calc(0.2em * 1);
  width: calc(1em * 1);
  height: calc(1em * 1);
}

.c5 .c3 {
  visibility: hidden;
}

<div>
    <label
      class="c0"
      role="checkbox"
    >
      <input
        class="c1"
        type="checkbox"
      />
      <div
        class="c2"
      >
        <svg
          class="c3 c4"
          viewBox="0 0 24 24"
        >
          <polyline
            points="20 6 9 17 4 12"
          />
        </svg>
      </div>
      basic
    </label>
    <label
      class="c0"
      role="checkbox"
    >
      <input
        class="c1"
        type="checkbox"
      />
      <div
        class="c5"
      >
        <svg
          class="c3 c4"
          viewBox="0 0 24 24"
        >
          <polyline
            points="20 6 9 17 4 12"
          />
        </svg>
      </div>
      basic
    </label>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;
