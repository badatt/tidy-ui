// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Render ButtonGroup Basic render 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": .c1 {
  cursor: pointer;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  white-space: nowrap;
  -webkit-text-decoration: none;
  text-decoration: none;
  text-align: center;
  vertical-align: middle;
  -webkit-transition: all 200ms linear;
  transition: all 200ms linear;
  font-size: 0.875rem;
  padding: 0.3em 0.5rem;
  border-radius: 0.3em;
  line-height: 1.5em;
  font-weight: 600;
  color: hsla(270,100%,98%,1);
  background-color: hsla(271,91%,65%,1);
  border: 1px solid hsla(272,72%,47%,0.4);
  box-shadow: 0px 1px 0px hsla(269,100%,95%,1);
}

.c1:hover {
  background-color: hsla(271,81%,56%,1);
}

.c0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.c0 > :first-child {
  border-top-right-radius: 0 !important;
  border-bottom-right-radius: 0 !important;
}

.c0 > :last-child {
  border-top-left-radius: 0 !important;
  border-bottom-left-radius: 0 !important;
  border-left: 0 !important;
}

.c0 > :not(:first-child):not(:last-child) {
  border-left: 0 !important;
}

.c0 * {
  box-shadow: none !important;
}

.c0 > :not(:first-child):not(:last-child) {
  border-radius: 0 !important;
}

<body>
    <div>
      <div
        class="c0"
        role="button"
      >
        <button
          class="c1"
          role="button"
        >
          Button 
          0
        </button>
        <button
          class="c1"
          role="button"
        >
          Button 
          1
        </button>
        <button
          class="c1"
          role="button"
        >
          Button 
          2
        </button>
        <button
          class="c1"
          role="button"
        >
          Button 
          3
        </button>
        <button
          class="c1"
          role="button"
        >
          Button 
          4
        </button>
      </div>
    </div>
  </body>,
  "container": .c1 {
  cursor: pointer;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  white-space: nowrap;
  -webkit-text-decoration: none;
  text-decoration: none;
  text-align: center;
  vertical-align: middle;
  -webkit-transition: all 200ms linear;
  transition: all 200ms linear;
  font-size: 0.875rem;
  padding: 0.3em 0.5rem;
  border-radius: 0.3em;
  line-height: 1.5em;
  font-weight: 600;
  color: hsla(270,100%,98%,1);
  background-color: hsla(271,91%,65%,1);
  border: 1px solid hsla(272,72%,47%,0.4);
  box-shadow: 0px 1px 0px hsla(269,100%,95%,1);
}

.c1:hover {
  background-color: hsla(271,81%,56%,1);
}

.c0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.c0 > :first-child {
  border-top-right-radius: 0 !important;
  border-bottom-right-radius: 0 !important;
}

.c0 > :last-child {
  border-top-left-radius: 0 !important;
  border-bottom-left-radius: 0 !important;
  border-left: 0 !important;
}

.c0 > :not(:first-child):not(:last-child) {
  border-left: 0 !important;
}

.c0 * {
  box-shadow: none !important;
}

.c0 > :not(:first-child):not(:last-child) {
  border-radius: 0 !important;
}

<div>
    <div
      class="c0"
      role="button"
    >
      <button
        class="c1"
        role="button"
      >
        Button 
        0
      </button>
      <button
        class="c1"
        role="button"
      >
        Button 
        1
      </button>
      <button
        class="c1"
        role="button"
      >
        Button 
        2
      </button>
      <button
        class="c1"
        role="button"
      >
        Button 
        3
      </button>
      <button
        class="c1"
        role="button"
      >
        Button 
        4
      </button>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`Render ButtonGroup Basic render in dark 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": .c1 {
  cursor: pointer;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  white-space: nowrap;
  -webkit-text-decoration: none;
  text-decoration: none;
  text-align: center;
  vertical-align: middle;
  -webkit-transition: all 200ms linear;
  transition: all 200ms linear;
  font-size: 0.875rem;
  padding: 0.3em 0.5rem;
  border-radius: 0.3em;
  line-height: 1.5em;
  font-weight: 600;
  color: hsla(270,100%,98%,1);
  background-color: hsla(271,91%,65%,1);
  border: 1px solid hsla(272,72%,47%,0.4);
}

.c1:hover {
  background-color: hsla(271,81%,56%,1);
}

.c0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.c0 > :first-child {
  border-top-right-radius: 0 !important;
  border-bottom-right-radius: 0 !important;
}

.c0 > :last-child {
  border-top-left-radius: 0 !important;
  border-bottom-left-radius: 0 !important;
  border-left: 0 !important;
}

.c0 > :not(:first-child):not(:last-child) {
  border-left: 0 !important;
}

.c0 * {
  box-shadow: none !important;
}

.c0 > :not(:first-child):not(:last-child) {
  border-radius: 0 !important;
}

<body>
    <div>
      <div
        class="c0"
        role="button"
      >
        <button
          class="c1"
          role="button"
        >
          Button 
          0
        </button>
        <button
          class="c1"
          role="button"
        >
          Button 
          1
        </button>
        <button
          class="c1"
          role="button"
        >
          Button 
          2
        </button>
        <button
          class="c1"
          role="button"
        >
          Button 
          3
        </button>
        <button
          class="c1"
          role="button"
        >
          Button 
          4
        </button>
      </div>
    </div>
  </body>,
  "container": .c1 {
  cursor: pointer;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  white-space: nowrap;
  -webkit-text-decoration: none;
  text-decoration: none;
  text-align: center;
  vertical-align: middle;
  -webkit-transition: all 200ms linear;
  transition: all 200ms linear;
  font-size: 0.875rem;
  padding: 0.3em 0.5rem;
  border-radius: 0.3em;
  line-height: 1.5em;
  font-weight: 600;
  color: hsla(270,100%,98%,1);
  background-color: hsla(271,91%,65%,1);
  border: 1px solid hsla(272,72%,47%,0.4);
}

.c1:hover {
  background-color: hsla(271,81%,56%,1);
}

.c0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.c0 > :first-child {
  border-top-right-radius: 0 !important;
  border-bottom-right-radius: 0 !important;
}

.c0 > :last-child {
  border-top-left-radius: 0 !important;
  border-bottom-left-radius: 0 !important;
  border-left: 0 !important;
}

.c0 > :not(:first-child):not(:last-child) {
  border-left: 0 !important;
}

.c0 * {
  box-shadow: none !important;
}

.c0 > :not(:first-child):not(:last-child) {
  border-radius: 0 !important;
}

<div>
    <div
      class="c0"
      role="button"
    >
      <button
        class="c1"
        role="button"
      >
        Button 
        0
      </button>
      <button
        class="c1"
        role="button"
      >
        Button 
        1
      </button>
      <button
        class="c1"
        role="button"
      >
        Button 
        2
      </button>
      <button
        class="c1"
        role="button"
      >
        Button 
        3
      </button>
      <button
        class="c1"
        role="button"
      >
        Button 
        4
      </button>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`Render ButtonGroup Custom dimensions 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": .c1 {
  cursor: pointer;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  white-space: nowrap;
  -webkit-text-decoration: none;
  text-decoration: none;
  text-align: center;
  vertical-align: middle;
  -webkit-transition: all 200ms linear;
  transition: all 200ms linear;
  font-size: 0.875rem;
  padding: 0.3em 0.5rem;
  border-radius: 0.3em;
  line-height: 1.5em;
  font-weight: 600;
  color: hsla(270,100%,98%,1);
  background-color: hsla(271,91%,65%,1);
  border: 1px solid hsla(272,72%,47%,0.4);
  box-shadow: 0px 1px 0px hsla(269,100%,95%,1);
}

.c1:hover {
  background-color: hsla(271,81%,56%,1);
}

.c0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  height: 5rem;
  width: 30rem;
}

.c0 > :first-child {
  border-top-right-radius: 0 !important;
  border-bottom-right-radius: 0 !important;
}

.c0 > :last-child {
  border-top-left-radius: 0 !important;
  border-bottom-left-radius: 0 !important;
  border-left: 0 !important;
}

.c0 > :not(:first-child):not(:last-child) {
  border-left: 0 !important;
}

.c0 * {
  box-shadow: none !important;
}

.c0 > :not(:first-child):not(:last-child) {
  border-radius: 0 !important;
}

<body>
    <div>
      <div
        class="c0"
        role="button"
      >
        <button
          class="c1"
          role="button"
        >
          Button 
          0
        </button>
        <button
          class="c1"
          role="button"
        >
          Button 
          1
        </button>
        <button
          class="c1"
          role="button"
        >
          Button 
          2
        </button>
        <button
          class="c1"
          role="button"
        >
          Button 
          3
        </button>
        <button
          class="c1"
          role="button"
        >
          Button 
          4
        </button>
      </div>
    </div>
  </body>,
  "container": .c1 {
  cursor: pointer;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  white-space: nowrap;
  -webkit-text-decoration: none;
  text-decoration: none;
  text-align: center;
  vertical-align: middle;
  -webkit-transition: all 200ms linear;
  transition: all 200ms linear;
  font-size: 0.875rem;
  padding: 0.3em 0.5rem;
  border-radius: 0.3em;
  line-height: 1.5em;
  font-weight: 600;
  color: hsla(270,100%,98%,1);
  background-color: hsla(271,91%,65%,1);
  border: 1px solid hsla(272,72%,47%,0.4);
  box-shadow: 0px 1px 0px hsla(269,100%,95%,1);
}

.c1:hover {
  background-color: hsla(271,81%,56%,1);
}

.c0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  height: 5rem;
  width: 30rem;
}

.c0 > :first-child {
  border-top-right-radius: 0 !important;
  border-bottom-right-radius: 0 !important;
}

.c0 > :last-child {
  border-top-left-radius: 0 !important;
  border-bottom-left-radius: 0 !important;
  border-left: 0 !important;
}

.c0 > :not(:first-child):not(:last-child) {
  border-left: 0 !important;
}

.c0 * {
  box-shadow: none !important;
}

.c0 > :not(:first-child):not(:last-child) {
  border-radius: 0 !important;
}

<div>
    <div
      class="c0"
      role="button"
    >
      <button
        class="c1"
        role="button"
      >
        Button 
        0
      </button>
      <button
        class="c1"
        role="button"
      >
        Button 
        1
      </button>
      <button
        class="c1"
        role="button"
      >
        Button 
        2
      </button>
      <button
        class="c1"
        role="button"
      >
        Button 
        3
      </button>
      <button
        class="c1"
        role="button"
      >
        Button 
        4
      </button>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`Render ButtonGroup Disabled ButtonGroup 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": .c1 {
  cursor: pointer;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  white-space: nowrap;
  -webkit-text-decoration: none;
  text-decoration: none;
  text-align: center;
  vertical-align: middle;
  -webkit-transition: all 200ms linear;
  transition: all 200ms linear;
  font-size: 0.875rem;
  padding: 0.3em 0.5rem;
  border-radius: 0.3em;
  line-height: 1.5em;
  font-weight: 600;
  color: hsla(270,100%,98%,1);
  background-color: hsla(271,91%,65%,1);
  border: 1px solid hsla(272,72%,47%,0.4);
  box-shadow: 0px 1px 0px hsla(269,100%,95%,1);
}

.c1:hover {
  background-color: hsla(271,81%,56%,1);
}

.c0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  cursor: not-allowed !important;
  opacity: 0.6 !important;
}

.c0 > :first-child {
  border-top-right-radius: 0 !important;
  border-bottom-right-radius: 0 !important;
}

.c0 > :last-child {
  border-top-left-radius: 0 !important;
  border-bottom-left-radius: 0 !important;
  border-left: 0 !important;
}

.c0 > :not(:first-child):not(:last-child) {
  border-left: 0 !important;
}

.c0 * {
  cursor: not-allowed !important;
  box-shadow: none !important;
}

.c0 *:hover {
  box-shadow: none !important;
}

.c0 * {
  box-shadow: none !important;
}

.c0 > :not(:first-child):not(:last-child) {
  border-radius: 0 !important;
}

<body>
    <div>
      <div
        class="c0"
        disabled=""
        role="button"
      >
        <button
          class="c1"
          role="button"
        >
          Button 
          0
        </button>
        <button
          class="c1"
          role="button"
        >
          Button 
          1
        </button>
        <button
          class="c1"
          role="button"
        >
          Button 
          2
        </button>
        <button
          class="c1"
          role="button"
        >
          Button 
          3
        </button>
        <button
          class="c1"
          role="button"
        >
          Button 
          4
        </button>
      </div>
    </div>
  </body>,
  "container": .c1 {
  cursor: pointer;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  white-space: nowrap;
  -webkit-text-decoration: none;
  text-decoration: none;
  text-align: center;
  vertical-align: middle;
  -webkit-transition: all 200ms linear;
  transition: all 200ms linear;
  font-size: 0.875rem;
  padding: 0.3em 0.5rem;
  border-radius: 0.3em;
  line-height: 1.5em;
  font-weight: 600;
  color: hsla(270,100%,98%,1);
  background-color: hsla(271,91%,65%,1);
  border: 1px solid hsla(272,72%,47%,0.4);
  box-shadow: 0px 1px 0px hsla(269,100%,95%,1);
}

.c1:hover {
  background-color: hsla(271,81%,56%,1);
}

.c0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  cursor: not-allowed !important;
  opacity: 0.6 !important;
}

.c0 > :first-child {
  border-top-right-radius: 0 !important;
  border-bottom-right-radius: 0 !important;
}

.c0 > :last-child {
  border-top-left-radius: 0 !important;
  border-bottom-left-radius: 0 !important;
  border-left: 0 !important;
}

.c0 > :not(:first-child):not(:last-child) {
  border-left: 0 !important;
}

.c0 * {
  cursor: not-allowed !important;
  box-shadow: none !important;
}

.c0 *:hover {
  box-shadow: none !important;
}

.c0 * {
  box-shadow: none !important;
}

.c0 > :not(:first-child):not(:last-child) {
  border-radius: 0 !important;
}

<div>
    <div
      class="c0"
      disabled=""
      role="button"
    >
      <button
        class="c1"
        role="button"
      >
        Button 
        0
      </button>
      <button
        class="c1"
        role="button"
      >
        Button 
        1
      </button>
      <button
        class="c1"
        role="button"
      >
        Button 
        2
      </button>
      <button
        class="c1"
        role="button"
      >
        Button 
        3
      </button>
      <button
        class="c1"
        role="button"
      >
        Button 
        4
      </button>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`Render ButtonGroup Stretched ButtonGroup 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": .c1 {
  cursor: pointer;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  white-space: nowrap;
  -webkit-text-decoration: none;
  text-decoration: none;
  text-align: center;
  vertical-align: middle;
  -webkit-transition: all 200ms linear;
  transition: all 200ms linear;
  font-size: 0.875rem;
  padding: 0.3em 0.5rem;
  border-radius: 0.3em;
  line-height: 1.5em;
  color: hsla(274,66%,32%,1);
  border: 1px solid hsla(271,91%,65%,1);
}

.c1:hover {
  background-color: hsla(269,100%,92%,1);
}

.c0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  width: 100% !important;
}

.c0 > :first-child {
  border-top-right-radius: 0 !important;
  border-bottom-right-radius: 0 !important;
}

.c0 > :last-child {
  border-top-left-radius: 0 !important;
  border-bottom-left-radius: 0 !important;
  border-left: 0 !important;
}

.c0 > :not(:first-child):not(:last-child) {
  border-left: 0 !important;
}

.c0 * {
  -webkit-box-flex: 1 !important;
  -webkit-flex-grow: 1 !important;
  -ms-flex-positive: 1 !important;
  flex-grow: 1 !important;
  -webkit-flex-shrink: 1 !important;
  -ms-flex-negative: 1 !important;
  flex-shrink: 1 !important;
  -webkit-flex-basis: 1% !important;
  -ms-flex-preferred-size: 1% !important;
  flex-basis: 1% !important;
}

.c0 * {
  box-shadow: none !important;
}

.c0 > :not(:first-child):not(:last-child) {
  border-radius: 0 !important;
}

<body>
    <div>
      <div
        class="c0"
        role="button"
      >
        <button
          class="c1"
          role="button"
        >
          button 1
        </button>
        <button
          class="c1"
          role="button"
        >
          button 2
        </button>
      </div>
    </div>
  </body>,
  "container": .c1 {
  cursor: pointer;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  white-space: nowrap;
  -webkit-text-decoration: none;
  text-decoration: none;
  text-align: center;
  vertical-align: middle;
  -webkit-transition: all 200ms linear;
  transition: all 200ms linear;
  font-size: 0.875rem;
  padding: 0.3em 0.5rem;
  border-radius: 0.3em;
  line-height: 1.5em;
  color: hsla(274,66%,32%,1);
  border: 1px solid hsla(271,91%,65%,1);
}

.c1:hover {
  background-color: hsla(269,100%,92%,1);
}

.c0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  width: 100% !important;
}

.c0 > :first-child {
  border-top-right-radius: 0 !important;
  border-bottom-right-radius: 0 !important;
}

.c0 > :last-child {
  border-top-left-radius: 0 !important;
  border-bottom-left-radius: 0 !important;
  border-left: 0 !important;
}

.c0 > :not(:first-child):not(:last-child) {
  border-left: 0 !important;
}

.c0 * {
  -webkit-box-flex: 1 !important;
  -webkit-flex-grow: 1 !important;
  -ms-flex-positive: 1 !important;
  flex-grow: 1 !important;
  -webkit-flex-shrink: 1 !important;
  -ms-flex-negative: 1 !important;
  flex-shrink: 1 !important;
  -webkit-flex-basis: 1% !important;
  -ms-flex-preferred-size: 1% !important;
  flex-basis: 1% !important;
}

.c0 * {
  box-shadow: none !important;
}

.c0 > :not(:first-child):not(:last-child) {
  border-radius: 0 !important;
}

<div>
    <div
      class="c0"
      role="button"
    >
      <button
        class="c1"
        role="button"
      >
        button 1
      </button>
      <button
        class="c1"
        role="button"
      >
        button 2
      </button>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`Render ButtonGroup Unified ButtonGroup 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": .c1 {
  cursor: pointer;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  white-space: nowrap;
  -webkit-text-decoration: none;
  text-decoration: none;
  text-align: center;
  vertical-align: middle;
  -webkit-transition: all 200ms linear;
  transition: all 200ms linear;
  font-size: 0.875rem;
  padding: 0.3em 0.5rem;
  border-radius: 0.3em;
  line-height: 1.5em;
  font-weight: 600;
  color: hsla(270,100%,98%,1);
  background-color: hsla(271,91%,65%,1);
  border: 1px solid hsla(272,72%,47%,0.4);
  box-shadow: 0px 1px 0px hsla(269,100%,95%,1);
}

.c1:hover {
  background-color: hsla(271,81%,56%,1);
}

.c0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.c0 > :first-child {
  border-top-right-radius: 0 !important;
  border-bottom-right-radius: 0 !important;
  border-right: 0 !important;
}

.c0 > :last-child {
  border-top-left-radius: 0 !important;
  border-bottom-left-radius: 0 !important;
  border-left: 0 !important;
}

.c0 > :not(:first-child):not(:last-child) {
  border-right: 0 !important;
  border-left: 0 !important;
}

.c0 * {
  box-shadow: none !important;
}

.c0 > :not(:first-child):not(:last-child) {
  border-radius: 0 !important;
}

<body>
    <div>
      <div
        class="c0"
        role="button"
      >
        <button
          class="c1"
          role="button"
        >
          Button 
          0
        </button>
        <button
          class="c1"
          role="button"
        >
          Button 
          1
        </button>
        <button
          class="c1"
          role="button"
        >
          Button 
          2
        </button>
        <button
          class="c1"
          role="button"
        >
          Button 
          3
        </button>
        <button
          class="c1"
          role="button"
        >
          Button 
          4
        </button>
      </div>
    </div>
  </body>,
  "container": .c1 {
  cursor: pointer;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  white-space: nowrap;
  -webkit-text-decoration: none;
  text-decoration: none;
  text-align: center;
  vertical-align: middle;
  -webkit-transition: all 200ms linear;
  transition: all 200ms linear;
  font-size: 0.875rem;
  padding: 0.3em 0.5rem;
  border-radius: 0.3em;
  line-height: 1.5em;
  font-weight: 600;
  color: hsla(270,100%,98%,1);
  background-color: hsla(271,91%,65%,1);
  border: 1px solid hsla(272,72%,47%,0.4);
  box-shadow: 0px 1px 0px hsla(269,100%,95%,1);
}

.c1:hover {
  background-color: hsla(271,81%,56%,1);
}

.c0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.c0 > :first-child {
  border-top-right-radius: 0 !important;
  border-bottom-right-radius: 0 !important;
  border-right: 0 !important;
}

.c0 > :last-child {
  border-top-left-radius: 0 !important;
  border-bottom-left-radius: 0 !important;
  border-left: 0 !important;
}

.c0 > :not(:first-child):not(:last-child) {
  border-right: 0 !important;
  border-left: 0 !important;
}

.c0 * {
  box-shadow: none !important;
}

.c0 > :not(:first-child):not(:last-child) {
  border-radius: 0 !important;
}

<div>
    <div
      class="c0"
      role="button"
    >
      <button
        class="c1"
        role="button"
      >
        Button 
        0
      </button>
      <button
        class="c1"
        role="button"
      >
        Button 
        1
      </button>
      <button
        class="c1"
        role="button"
      >
        Button 
        2
      </button>
      <button
        class="c1"
        role="button"
      >
        Button 
        3
      </button>
      <button
        class="c1"
        role="button"
      >
        Button 
        4
      </button>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`Render ButtonGroup Vertically aligned ButtonGroup 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": .c1 {
  cursor: pointer;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  white-space: nowrap;
  -webkit-text-decoration: none;
  text-decoration: none;
  text-align: center;
  vertical-align: middle;
  -webkit-transition: all 200ms linear;
  transition: all 200ms linear;
  font-size: 0.875rem;
  padding: 0.3em 0.5rem;
  border-radius: 0.3em;
  line-height: 1.5em;
  font-weight: 600;
  color: hsla(270,100%,98%,1);
  background-color: hsla(271,91%,65%,1);
  border: 1px solid hsla(272,72%,47%,0.4);
  box-shadow: 0px 1px 0px hsla(269,100%,95%,1);
}

.c1:hover {
  background-color: hsla(271,81%,56%,1);
}

.c0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
}

.c0 > :first-child {
  border-bottom-left-radius: 0 !important;
  border-bottom-right-radius: 0 !important;
}

.c0 > :last-child {
  border-top-left-radius: 0 !important;
  border-top-right-radius: 0 !important;
  border-top: 0 !important;
}

.c0 > :not(:first-child):not(:last-child) {
  border-top: 0 !important;
}

.c0 * {
  box-shadow: none !important;
}

.c0 > :not(:first-child):not(:last-child) {
  border-radius: 0 !important;
}

<body>
    <div>
      <div
        class="c0"
        role="button"
      >
        <button
          class="c1"
          role="button"
        >
          Button 
          0
        </button>
        <button
          class="c1"
          role="button"
        >
          Button 
          1
        </button>
        <button
          class="c1"
          role="button"
        >
          Button 
          2
        </button>
        <button
          class="c1"
          role="button"
        >
          Button 
          3
        </button>
        <button
          class="c1"
          role="button"
        >
          Button 
          4
        </button>
      </div>
    </div>
  </body>,
  "container": .c1 {
  cursor: pointer;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  white-space: nowrap;
  -webkit-text-decoration: none;
  text-decoration: none;
  text-align: center;
  vertical-align: middle;
  -webkit-transition: all 200ms linear;
  transition: all 200ms linear;
  font-size: 0.875rem;
  padding: 0.3em 0.5rem;
  border-radius: 0.3em;
  line-height: 1.5em;
  font-weight: 600;
  color: hsla(270,100%,98%,1);
  background-color: hsla(271,91%,65%,1);
  border: 1px solid hsla(272,72%,47%,0.4);
  box-shadow: 0px 1px 0px hsla(269,100%,95%,1);
}

.c1:hover {
  background-color: hsla(271,81%,56%,1);
}

.c0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
}

.c0 > :first-child {
  border-bottom-left-radius: 0 !important;
  border-bottom-right-radius: 0 !important;
}

.c0 > :last-child {
  border-top-left-radius: 0 !important;
  border-top-right-radius: 0 !important;
  border-top: 0 !important;
}

.c0 > :not(:first-child):not(:last-child) {
  border-top: 0 !important;
}

.c0 * {
  box-shadow: none !important;
}

.c0 > :not(:first-child):not(:last-child) {
  border-radius: 0 !important;
}

<div>
    <div
      class="c0"
      role="button"
    >
      <button
        class="c1"
        role="button"
      >
        Button 
        0
      </button>
      <button
        class="c1"
        role="button"
      >
        Button 
        1
      </button>
      <button
        class="c1"
        role="button"
      >
        Button 
        2
      </button>
      <button
        class="c1"
        role="button"
      >
        Button 
        3
      </button>
      <button
        class="c1"
        role="button"
      >
        Button 
        4
      </button>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`Render ButtonGroup Vertically unified ButtonGroup 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": .c1 {
  cursor: pointer;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  white-space: nowrap;
  -webkit-text-decoration: none;
  text-decoration: none;
  text-align: center;
  vertical-align: middle;
  -webkit-transition: all 200ms linear;
  transition: all 200ms linear;
  font-size: 0.875rem;
  padding: 0.3em 0.5rem;
  border-radius: 0.3em;
  line-height: 1.5em;
  font-weight: 600;
  color: hsla(270,100%,98%,1);
  background-color: hsla(271,91%,65%,1);
  border: 1px solid hsla(272,72%,47%,0.4);
  box-shadow: 0px 1px 0px hsla(269,100%,95%,1);
}

.c1:hover {
  background-color: hsla(271,81%,56%,1);
}

.c0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
}

.c0 > :first-child {
  border-bottom-left-radius: 0 !important;
  border-bottom-right-radius: 0 !important;
  border-bottom: 0 !important;
}

.c0 > :last-child {
  border-top-left-radius: 0 !important;
  border-top-right-radius: 0 !important;
  border-top: 0 !important;
}

.c0 > :not(:first-child):not(:last-child) {
  border-top: 0 !important;
  border-bottom: 0 !important;
}

.c0 * {
  box-shadow: none !important;
}

.c0 > :not(:first-child):not(:last-child) {
  border-radius: 0 !important;
}

<body>
    <div>
      <div
        class="c0"
        role="button"
      >
        <button
          class="c1"
          role="button"
        >
          Button 
          0
        </button>
        <button
          class="c1"
          role="button"
        >
          Button 
          1
        </button>
        <button
          class="c1"
          role="button"
        >
          Button 
          2
        </button>
        <button
          class="c1"
          role="button"
        >
          Button 
          3
        </button>
        <button
          class="c1"
          role="button"
        >
          Button 
          4
        </button>
      </div>
    </div>
  </body>,
  "container": .c1 {
  cursor: pointer;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  white-space: nowrap;
  -webkit-text-decoration: none;
  text-decoration: none;
  text-align: center;
  vertical-align: middle;
  -webkit-transition: all 200ms linear;
  transition: all 200ms linear;
  font-size: 0.875rem;
  padding: 0.3em 0.5rem;
  border-radius: 0.3em;
  line-height: 1.5em;
  font-weight: 600;
  color: hsla(270,100%,98%,1);
  background-color: hsla(271,91%,65%,1);
  border: 1px solid hsla(272,72%,47%,0.4);
  box-shadow: 0px 1px 0px hsla(269,100%,95%,1);
}

.c1:hover {
  background-color: hsla(271,81%,56%,1);
}

.c0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
}

.c0 > :first-child {
  border-bottom-left-radius: 0 !important;
  border-bottom-right-radius: 0 !important;
  border-bottom: 0 !important;
}

.c0 > :last-child {
  border-top-left-radius: 0 !important;
  border-top-right-radius: 0 !important;
  border-top: 0 !important;
}

.c0 > :not(:first-child):not(:last-child) {
  border-top: 0 !important;
  border-bottom: 0 !important;
}

.c0 * {
  box-shadow: none !important;
}

.c0 > :not(:first-child):not(:last-child) {
  border-radius: 0 !important;
}

<div>
    <div
      class="c0"
      role="button"
    >
      <button
        class="c1"
        role="button"
      >
        Button 
        0
      </button>
      <button
        class="c1"
        role="button"
      >
        Button 
        1
      </button>
      <button
        class="c1"
        role="button"
      >
        Button 
        2
      </button>
      <button
        class="c1"
        role="button"
      >
        Button 
        3
      </button>
      <button
        class="c1"
        role="button"
      >
        Button 
        4
      </button>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;
