// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Input Basic render 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": .c2 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  width: 100%;
}

.c3 {
  min-width: 0px;
  outline: transparent solid 2px;
  outline-offset: 2px;
  position: relative;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  -webkit-transition-property: background-color,border-color,color,fill,stroke,opacity,box-shadow,-webkit-transform;
  -webkit-transition-property: background-color,border-color,color,fill,stroke,opacity,box-shadow,transform;
  transition-property: background-color,border-color,color,fill,stroke,opacity,box-shadow,transform;
  -webkit-transition-duration: 200ms;
  transition-duration: 200ms;
  border-width: 1px;
  border-image: initial;
  background: inherit;
  color: inherit;
  width: inherit;
  height: calc(2.5em * 1);
  font-size: calc(1rem * 1);
  border-style: solid;
  border-radius: calc(0.375rem * 1);
  padding-inline-start: calc(1rem * 1);
  padding-inline-end: calc(1rem * 1);
  border-color: hsla(213,27%,84%,1);
}

.c3::-webkit-input-placeholder {
  color: hsla(215,16%,47%,1);
  opacity: 1;
}

.c3::-moz-placeholder {
  color: hsla(215,16%,47%,1);
  opacity: 1;
}

.c3:-ms-input-placeholder {
  color: hsla(215,16%,47%,1);
  opacity: 1;
}

.c3::placeholder {
  color: hsla(215,16%,47%,1);
  opacity: 1;
}

.c3:-ms-input-placeholder {
  color: hsla(215,16%,47%,1);
}

.c3::-ms-input-placeholder {
  color: hsla(215,16%,47%,1);
}

.c3:hover {
  border-color: hsla(215,20%,65%,1);
}

.c3:focus-visible {
  z-index: 1;
  border-color: hsla(217,91%,60%,1);
  box-shadow: hsla(217,91%,60%,1) 0px 0px 0px 1px;
}

.c0 {
  width: 100%;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  position: relative;
  isolation: isolate;
}

.c0 > :first-child,
.c0 > :first-child input {
  border-top-right-radius: 0 !important;
  border-bottom-right-radius: 0 !important;
}

.c0 > :first-child {
  border-right: 0 !important;
}

.c0 > :last-child,
.c0 > :last-child input {
  border-top-left-radius: 0 !important;
  border-bottom-left-radius: 0 !important;
}

.c0 > :last-child {
  border-left: 0 !important;
}

.c0 > :not(:first-child):not(:last-child),
.c0 > :not(:first-child):not(:last-child) input {
  border-radius: 0 !important;
}

.c1 {
  min-width: 0px;
  outline: transparent solid 2px;
  outline-offset: 2px;
  position: relative;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  -webkit-transition-property: background-color,border-color,color,fill,stroke,opacity,box-shadow,-webkit-transform;
  -webkit-transition-property: background-color,border-color,color,fill,stroke,opacity,box-shadow,transform;
  transition-property: background-color,border-color,color,fill,stroke,opacity,box-shadow,transform;
  -webkit-transition-duration: 200ms;
  transition-duration: 200ms;
  border-width: 1px;
  border-image: initial;
  background: inherit;
  color: inherit;
  width: inherit;
  height: calc(2.5em * 1);
  font-size: calc(1rem * 1);
  border-style: solid;
  border-radius: calc(0.375rem * 1);
  padding-inline-start: calc(1rem * 1);
  padding-inline-end: calc(1rem * 1);
  border-color: hsla(213,27%,84%,1);
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  pointer-events: none;
  width: auto;
  white-space: nowrap;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  background-color: hsla(214,32%,91%,1);
  color: hsla(215,19%,35%,1);
  font-weight: 500;
}

.c1::-webkit-input-placeholder {
  color: hsla(215,16%,47%,1);
  opacity: 1;
}

.c1::-moz-placeholder {
  color: hsla(215,16%,47%,1);
  opacity: 1;
}

.c1:-ms-input-placeholder {
  color: hsla(215,16%,47%,1);
  opacity: 1;
}

.c1::placeholder {
  color: hsla(215,16%,47%,1);
  opacity: 1;
}

.c1:-ms-input-placeholder {
  color: hsla(215,16%,47%,1);
}

.c1::-ms-input-placeholder {
  color: hsla(215,16%,47%,1);
}

.c1:hover {
  border-color: hsla(215,20%,65%,1);
}

.c1:focus-visible {
  z-index: 1;
  border-color: hsla(217,91%,60%,1);
  box-shadow: hsla(217,91%,60%,1) 0px 0px 0px 1px;
}

<body>
    <div>
      <div
        class="c0"
        role="group"
      >
        <div
          class="c1"
        >
          https://
        </div>
        <div
          class="c2"
        >
          <input
            class="c3"
            placeholder="google"
            role="form"
          />
        </div>
        <div
          class="c1"
        >
          .com
        </div>
      </div>
      <div
        class="c0"
        role="group"
      >
        <div
          class="c1"
        >
          https://
        </div>
        <div
          class="c2"
        >
          <input
            class="c3"
            placeholder="google.com"
            role="form"
          />
        </div>
      </div>
      <div
        class="c0"
        role="group"
      >
        <div
          class="c2"
        >
          <input
            class="c3"
            placeholder="google"
            role="form"
          />
        </div>
        <div
          class="c1"
        >
          .com
        </div>
      </div>
    </div>
  </body>,
  "container": .c2 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  width: 100%;
}

.c3 {
  min-width: 0px;
  outline: transparent solid 2px;
  outline-offset: 2px;
  position: relative;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  -webkit-transition-property: background-color,border-color,color,fill,stroke,opacity,box-shadow,-webkit-transform;
  -webkit-transition-property: background-color,border-color,color,fill,stroke,opacity,box-shadow,transform;
  transition-property: background-color,border-color,color,fill,stroke,opacity,box-shadow,transform;
  -webkit-transition-duration: 200ms;
  transition-duration: 200ms;
  border-width: 1px;
  border-image: initial;
  background: inherit;
  color: inherit;
  width: inherit;
  height: calc(2.5em * 1);
  font-size: calc(1rem * 1);
  border-style: solid;
  border-radius: calc(0.375rem * 1);
  padding-inline-start: calc(1rem * 1);
  padding-inline-end: calc(1rem * 1);
  border-color: hsla(213,27%,84%,1);
}

.c3::-webkit-input-placeholder {
  color: hsla(215,16%,47%,1);
  opacity: 1;
}

.c3::-moz-placeholder {
  color: hsla(215,16%,47%,1);
  opacity: 1;
}

.c3:-ms-input-placeholder {
  color: hsla(215,16%,47%,1);
  opacity: 1;
}

.c3::placeholder {
  color: hsla(215,16%,47%,1);
  opacity: 1;
}

.c3:-ms-input-placeholder {
  color: hsla(215,16%,47%,1);
}

.c3::-ms-input-placeholder {
  color: hsla(215,16%,47%,1);
}

.c3:hover {
  border-color: hsla(215,20%,65%,1);
}

.c3:focus-visible {
  z-index: 1;
  border-color: hsla(217,91%,60%,1);
  box-shadow: hsla(217,91%,60%,1) 0px 0px 0px 1px;
}

.c0 {
  width: 100%;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  position: relative;
  isolation: isolate;
}

.c0 > :first-child,
.c0 > :first-child input {
  border-top-right-radius: 0 !important;
  border-bottom-right-radius: 0 !important;
}

.c0 > :first-child {
  border-right: 0 !important;
}

.c0 > :last-child,
.c0 > :last-child input {
  border-top-left-radius: 0 !important;
  border-bottom-left-radius: 0 !important;
}

.c0 > :last-child {
  border-left: 0 !important;
}

.c0 > :not(:first-child):not(:last-child),
.c0 > :not(:first-child):not(:last-child) input {
  border-radius: 0 !important;
}

.c1 {
  min-width: 0px;
  outline: transparent solid 2px;
  outline-offset: 2px;
  position: relative;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  -webkit-transition-property: background-color,border-color,color,fill,stroke,opacity,box-shadow,-webkit-transform;
  -webkit-transition-property: background-color,border-color,color,fill,stroke,opacity,box-shadow,transform;
  transition-property: background-color,border-color,color,fill,stroke,opacity,box-shadow,transform;
  -webkit-transition-duration: 200ms;
  transition-duration: 200ms;
  border-width: 1px;
  border-image: initial;
  background: inherit;
  color: inherit;
  width: inherit;
  height: calc(2.5em * 1);
  font-size: calc(1rem * 1);
  border-style: solid;
  border-radius: calc(0.375rem * 1);
  padding-inline-start: calc(1rem * 1);
  padding-inline-end: calc(1rem * 1);
  border-color: hsla(213,27%,84%,1);
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  pointer-events: none;
  width: auto;
  white-space: nowrap;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  background-color: hsla(214,32%,91%,1);
  color: hsla(215,19%,35%,1);
  font-weight: 500;
}

.c1::-webkit-input-placeholder {
  color: hsla(215,16%,47%,1);
  opacity: 1;
}

.c1::-moz-placeholder {
  color: hsla(215,16%,47%,1);
  opacity: 1;
}

.c1:-ms-input-placeholder {
  color: hsla(215,16%,47%,1);
  opacity: 1;
}

.c1::placeholder {
  color: hsla(215,16%,47%,1);
  opacity: 1;
}

.c1:-ms-input-placeholder {
  color: hsla(215,16%,47%,1);
}

.c1::-ms-input-placeholder {
  color: hsla(215,16%,47%,1);
}

.c1:hover {
  border-color: hsla(215,20%,65%,1);
}

.c1:focus-visible {
  z-index: 1;
  border-color: hsla(217,91%,60%,1);
  box-shadow: hsla(217,91%,60%,1) 0px 0px 0px 1px;
}

<div>
    <div
      class="c0"
      role="group"
    >
      <div
        class="c1"
      >
        https://
      </div>
      <div
        class="c2"
      >
        <input
          class="c3"
          placeholder="google"
          role="form"
        />
      </div>
      <div
        class="c1"
      >
        .com
      </div>
    </div>
    <div
      class="c0"
      role="group"
    >
      <div
        class="c1"
      >
        https://
      </div>
      <div
        class="c2"
      >
        <input
          class="c3"
          placeholder="google.com"
          role="form"
        />
      </div>
    </div>
    <div
      class="c0"
      role="group"
    >
      <div
        class="c2"
      >
        <input
          class="c3"
          placeholder="google"
          role="form"
        />
      </div>
      <div
        class="c1"
      >
        .com
      </div>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`Input Blend dark render 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": .c2 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  width: 100%;
}

.c3 {
  min-width: 0px;
  outline: transparent solid 2px;
  outline-offset: 2px;
  position: relative;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  -webkit-transition-property: background-color,border-color,color,fill,stroke,opacity,box-shadow,-webkit-transform;
  -webkit-transition-property: background-color,border-color,color,fill,stroke,opacity,box-shadow,transform;
  transition-property: background-color,border-color,color,fill,stroke,opacity,box-shadow,transform;
  -webkit-transition-duration: 200ms;
  transition-duration: 200ms;
  border-width: 1px;
  border-image: initial;
  background: inherit;
  color: inherit;
  width: inherit;
  height: calc(2.5em * 1);
  font-size: calc(1rem * 1);
  border-style: solid;
  border-radius: calc(0.375rem * 1);
  padding-inline-start: calc(1rem * 1);
  padding-inline-end: calc(1rem * 1);
  border-color: hsla(215,19%,35%,1);
}

.c3::-webkit-input-placeholder {
  color: hsla(215,16%,47%,1);
  opacity: 1;
}

.c3::-moz-placeholder {
  color: hsla(215,16%,47%,1);
  opacity: 1;
}

.c3:-ms-input-placeholder {
  color: hsla(215,16%,47%,1);
  opacity: 1;
}

.c3::placeholder {
  color: hsla(215,16%,47%,1);
  opacity: 1;
}

.c3:-ms-input-placeholder {
  color: hsla(215,16%,47%,1);
}

.c3::-ms-input-placeholder {
  color: hsla(215,16%,47%,1);
}

.c3:hover {
  border-color: hsla(215,20%,65%,1);
}

.c3:focus-visible {
  z-index: 1;
  border-color: hsla(217,91%,60%,1);
  box-shadow: hsla(217,91%,60%,1) 0px 0px 0px 1px;
}

.c0 {
  width: 100%;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  position: relative;
  isolation: isolate;
}

.c0 > :first-child {
  left: 0;
}

.c0 > :last-child {
  right: 0;
}

.c0 input {
  padding-inline-start: calc(2.5em * 1);
  padding-inline-end: calc(2.5em * 1);
}

.c0 > div:first-child > input {
  padding-inline-start: calc(1rem * 1);
}

.c0 > div:last-child > input {
  padding-inline-end: calc(1rem * 1);
}

.c1 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  position: absolute;
  z-index: 2;
  font-size: calc(1rem * 1);
  height: calc(2.5em * 1);
  width: calc(2.5em * 1);
  font-size: calc(1rem * 1);
  line-height: calc(1.5 * 1);
  color: hsla(215,19%,35%,1);
  font-weight: 500;
  pointer-events: none;
}

<body>
    <div>
      <div
        class="c0"
        role="group"
      >
        <div
          class="c1"
        >
          $
        </div>
        <div
          class="c2"
        >
          <input
            class="c3"
            placeholder="500"
            role="form"
          />
        </div>
        <div
          class="c1"
        >
          /-
        </div>
      </div>
      <div
        class="c0"
        role="group"
      >
        <div
          class="c1"
        >
          $
        </div>
        <div
          class="c2"
        >
          <input
            class="c3"
            placeholder="500"
            role="form"
          />
        </div>
      </div>
      <div
        class="c0"
        role="group"
      >
        <div
          class="c2"
        >
          <input
            class="c3"
            placeholder="500"
            role="form"
          />
        </div>
        <div
          class="c1"
        >
          /-
        </div>
      </div>
    </div>
  </body>,
  "container": .c2 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  width: 100%;
}

.c3 {
  min-width: 0px;
  outline: transparent solid 2px;
  outline-offset: 2px;
  position: relative;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  -webkit-transition-property: background-color,border-color,color,fill,stroke,opacity,box-shadow,-webkit-transform;
  -webkit-transition-property: background-color,border-color,color,fill,stroke,opacity,box-shadow,transform;
  transition-property: background-color,border-color,color,fill,stroke,opacity,box-shadow,transform;
  -webkit-transition-duration: 200ms;
  transition-duration: 200ms;
  border-width: 1px;
  border-image: initial;
  background: inherit;
  color: inherit;
  width: inherit;
  height: calc(2.5em * 1);
  font-size: calc(1rem * 1);
  border-style: solid;
  border-radius: calc(0.375rem * 1);
  padding-inline-start: calc(1rem * 1);
  padding-inline-end: calc(1rem * 1);
  border-color: hsla(215,19%,35%,1);
}

.c3::-webkit-input-placeholder {
  color: hsla(215,16%,47%,1);
  opacity: 1;
}

.c3::-moz-placeholder {
  color: hsla(215,16%,47%,1);
  opacity: 1;
}

.c3:-ms-input-placeholder {
  color: hsla(215,16%,47%,1);
  opacity: 1;
}

.c3::placeholder {
  color: hsla(215,16%,47%,1);
  opacity: 1;
}

.c3:-ms-input-placeholder {
  color: hsla(215,16%,47%,1);
}

.c3::-ms-input-placeholder {
  color: hsla(215,16%,47%,1);
}

.c3:hover {
  border-color: hsla(215,20%,65%,1);
}

.c3:focus-visible {
  z-index: 1;
  border-color: hsla(217,91%,60%,1);
  box-shadow: hsla(217,91%,60%,1) 0px 0px 0px 1px;
}

.c0 {
  width: 100%;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  position: relative;
  isolation: isolate;
}

.c0 > :first-child {
  left: 0;
}

.c0 > :last-child {
  right: 0;
}

.c0 input {
  padding-inline-start: calc(2.5em * 1);
  padding-inline-end: calc(2.5em * 1);
}

.c0 > div:first-child > input {
  padding-inline-start: calc(1rem * 1);
}

.c0 > div:last-child > input {
  padding-inline-end: calc(1rem * 1);
}

.c1 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  position: absolute;
  z-index: 2;
  font-size: calc(1rem * 1);
  height: calc(2.5em * 1);
  width: calc(2.5em * 1);
  font-size: calc(1rem * 1);
  line-height: calc(1.5 * 1);
  color: hsla(215,19%,35%,1);
  font-weight: 500;
  pointer-events: none;
}

<div>
    <div
      class="c0"
      role="group"
    >
      <div
        class="c1"
      >
        $
      </div>
      <div
        class="c2"
      >
        <input
          class="c3"
          placeholder="500"
          role="form"
        />
      </div>
      <div
        class="c1"
      >
        /-
      </div>
    </div>
    <div
      class="c0"
      role="group"
    >
      <div
        class="c1"
      >
        $
      </div>
      <div
        class="c2"
      >
        <input
          class="c3"
          placeholder="500"
          role="form"
        />
      </div>
    </div>
    <div
      class="c0"
      role="group"
    >
      <div
        class="c2"
      >
        <input
          class="c3"
          placeholder="500"
          role="form"
        />
      </div>
      <div
        class="c1"
      >
        /-
      </div>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`Input Blend render 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": .c2 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  width: 100%;
}

.c3 {
  min-width: 0px;
  outline: transparent solid 2px;
  outline-offset: 2px;
  position: relative;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  -webkit-transition-property: background-color,border-color,color,fill,stroke,opacity,box-shadow,-webkit-transform;
  -webkit-transition-property: background-color,border-color,color,fill,stroke,opacity,box-shadow,transform;
  transition-property: background-color,border-color,color,fill,stroke,opacity,box-shadow,transform;
  -webkit-transition-duration: 200ms;
  transition-duration: 200ms;
  border-width: 1px;
  border-image: initial;
  background: inherit;
  color: inherit;
  width: inherit;
  height: calc(2.5em * 1);
  font-size: calc(1rem * 1);
  border-style: solid;
  border-radius: calc(0.375rem * 1);
  padding-inline-start: calc(1rem * 1);
  padding-inline-end: calc(1rem * 1);
  border-color: hsla(213,27%,84%,1);
}

.c3::-webkit-input-placeholder {
  color: hsla(215,16%,47%,1);
  opacity: 1;
}

.c3::-moz-placeholder {
  color: hsla(215,16%,47%,1);
  opacity: 1;
}

.c3:-ms-input-placeholder {
  color: hsla(215,16%,47%,1);
  opacity: 1;
}

.c3::placeholder {
  color: hsla(215,16%,47%,1);
  opacity: 1;
}

.c3:-ms-input-placeholder {
  color: hsla(215,16%,47%,1);
}

.c3::-ms-input-placeholder {
  color: hsla(215,16%,47%,1);
}

.c3:hover {
  border-color: hsla(215,20%,65%,1);
}

.c3:focus-visible {
  z-index: 1;
  border-color: hsla(217,91%,60%,1);
  box-shadow: hsla(217,91%,60%,1) 0px 0px 0px 1px;
}

.c0 {
  width: 100%;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  position: relative;
  isolation: isolate;
}

.c0 > :first-child {
  left: 0;
}

.c0 > :last-child {
  right: 0;
}

.c0 input {
  padding-inline-start: calc(2.5em * 1);
  padding-inline-end: calc(2.5em * 1);
}

.c0 > div:first-child > input {
  padding-inline-start: calc(1rem * 1);
}

.c0 > div:last-child > input {
  padding-inline-end: calc(1rem * 1);
}

.c1 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  position: absolute;
  z-index: 2;
  font-size: calc(1rem * 1);
  height: calc(2.5em * 1);
  width: calc(2.5em * 1);
  font-size: calc(1rem * 1);
  line-height: calc(1.5 * 1);
  color: hsla(215,20%,65%,1);
  font-weight: 500;
  pointer-events: none;
}

<body>
    <div>
      <div
        class="c0"
        role="group"
      >
        <div
          class="c1"
        >
          $
        </div>
        <div
          class="c2"
        >
          <input
            class="c3"
            placeholder="500"
            role="form"
          />
        </div>
        <div
          class="c1"
        >
          /-
        </div>
      </div>
      <div
        class="c0"
        role="group"
      >
        <div
          class="c1"
        >
          $
        </div>
        <div
          class="c2"
        >
          <input
            class="c3"
            placeholder="500"
            role="form"
          />
        </div>
      </div>
      <div
        class="c0"
        role="group"
      >
        <div
          class="c2"
        >
          <input
            class="c3"
            placeholder="500"
            role="form"
          />
        </div>
        <div
          class="c1"
        >
          /-
        </div>
      </div>
    </div>
  </body>,
  "container": .c2 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  width: 100%;
}

.c3 {
  min-width: 0px;
  outline: transparent solid 2px;
  outline-offset: 2px;
  position: relative;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  -webkit-transition-property: background-color,border-color,color,fill,stroke,opacity,box-shadow,-webkit-transform;
  -webkit-transition-property: background-color,border-color,color,fill,stroke,opacity,box-shadow,transform;
  transition-property: background-color,border-color,color,fill,stroke,opacity,box-shadow,transform;
  -webkit-transition-duration: 200ms;
  transition-duration: 200ms;
  border-width: 1px;
  border-image: initial;
  background: inherit;
  color: inherit;
  width: inherit;
  height: calc(2.5em * 1);
  font-size: calc(1rem * 1);
  border-style: solid;
  border-radius: calc(0.375rem * 1);
  padding-inline-start: calc(1rem * 1);
  padding-inline-end: calc(1rem * 1);
  border-color: hsla(213,27%,84%,1);
}

.c3::-webkit-input-placeholder {
  color: hsla(215,16%,47%,1);
  opacity: 1;
}

.c3::-moz-placeholder {
  color: hsla(215,16%,47%,1);
  opacity: 1;
}

.c3:-ms-input-placeholder {
  color: hsla(215,16%,47%,1);
  opacity: 1;
}

.c3::placeholder {
  color: hsla(215,16%,47%,1);
  opacity: 1;
}

.c3:-ms-input-placeholder {
  color: hsla(215,16%,47%,1);
}

.c3::-ms-input-placeholder {
  color: hsla(215,16%,47%,1);
}

.c3:hover {
  border-color: hsla(215,20%,65%,1);
}

.c3:focus-visible {
  z-index: 1;
  border-color: hsla(217,91%,60%,1);
  box-shadow: hsla(217,91%,60%,1) 0px 0px 0px 1px;
}

.c0 {
  width: 100%;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  position: relative;
  isolation: isolate;
}

.c0 > :first-child {
  left: 0;
}

.c0 > :last-child {
  right: 0;
}

.c0 input {
  padding-inline-start: calc(2.5em * 1);
  padding-inline-end: calc(2.5em * 1);
}

.c0 > div:first-child > input {
  padding-inline-start: calc(1rem * 1);
}

.c0 > div:last-child > input {
  padding-inline-end: calc(1rem * 1);
}

.c1 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  position: absolute;
  z-index: 2;
  font-size: calc(1rem * 1);
  height: calc(2.5em * 1);
  width: calc(2.5em * 1);
  font-size: calc(1rem * 1);
  line-height: calc(1.5 * 1);
  color: hsla(215,20%,65%,1);
  font-weight: 500;
  pointer-events: none;
}

<div>
    <div
      class="c0"
      role="group"
    >
      <div
        class="c1"
      >
        $
      </div>
      <div
        class="c2"
      >
        <input
          class="c3"
          placeholder="500"
          role="form"
        />
      </div>
      <div
        class="c1"
      >
        /-
      </div>
    </div>
    <div
      class="c0"
      role="group"
    >
      <div
        class="c1"
      >
        $
      </div>
      <div
        class="c2"
      >
        <input
          class="c3"
          placeholder="500"
          role="form"
        />
      </div>
    </div>
    <div
      class="c0"
      role="group"
    >
      <div
        class="c2"
      >
        <input
          class="c3"
          placeholder="500"
          role="form"
        />
      </div>
      <div
        class="c1"
      >
        /-
      </div>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`Input Dark mode basic render 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": .c2 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  width: 100%;
}

.c3 {
  min-width: 0px;
  outline: transparent solid 2px;
  outline-offset: 2px;
  position: relative;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  -webkit-transition-property: background-color,border-color,color,fill,stroke,opacity,box-shadow,-webkit-transform;
  -webkit-transition-property: background-color,border-color,color,fill,stroke,opacity,box-shadow,transform;
  transition-property: background-color,border-color,color,fill,stroke,opacity,box-shadow,transform;
  -webkit-transition-duration: 200ms;
  transition-duration: 200ms;
  border-width: 1px;
  border-image: initial;
  background: inherit;
  color: inherit;
  width: inherit;
  height: calc(2.5em * 1);
  font-size: calc(1rem * 1);
  border-style: solid;
  border-radius: calc(0.375rem * 1);
  padding-inline-start: calc(1rem * 1);
  padding-inline-end: calc(1rem * 1);
  border-color: hsla(215,19%,35%,1);
}

.c3::-webkit-input-placeholder {
  color: hsla(215,16%,47%,1);
  opacity: 1;
}

.c3::-moz-placeholder {
  color: hsla(215,16%,47%,1);
  opacity: 1;
}

.c3:-ms-input-placeholder {
  color: hsla(215,16%,47%,1);
  opacity: 1;
}

.c3::placeholder {
  color: hsla(215,16%,47%,1);
  opacity: 1;
}

.c3:-ms-input-placeholder {
  color: hsla(215,16%,47%,1);
}

.c3::-ms-input-placeholder {
  color: hsla(215,16%,47%,1);
}

.c3:hover {
  border-color: hsla(215,20%,65%,1);
}

.c3:focus-visible {
  z-index: 1;
  border-color: hsla(217,91%,60%,1);
  box-shadow: hsla(217,91%,60%,1) 0px 0px 0px 1px;
}

.c0 {
  width: 100%;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  position: relative;
  isolation: isolate;
}

.c0 > :first-child,
.c0 > :first-child input {
  border-top-right-radius: 0 !important;
  border-bottom-right-radius: 0 !important;
}

.c0 > :first-child {
  border-right: 0 !important;
}

.c0 > :last-child,
.c0 > :last-child input {
  border-top-left-radius: 0 !important;
  border-bottom-left-radius: 0 !important;
}

.c0 > :last-child {
  border-left: 0 !important;
}

.c0 > :not(:first-child):not(:last-child),
.c0 > :not(:first-child):not(:last-child) input {
  border-radius: 0 !important;
}

.c1 {
  min-width: 0px;
  outline: transparent solid 2px;
  outline-offset: 2px;
  position: relative;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  -webkit-transition-property: background-color,border-color,color,fill,stroke,opacity,box-shadow,-webkit-transform;
  -webkit-transition-property: background-color,border-color,color,fill,stroke,opacity,box-shadow,transform;
  transition-property: background-color,border-color,color,fill,stroke,opacity,box-shadow,transform;
  -webkit-transition-duration: 200ms;
  transition-duration: 200ms;
  border-width: 1px;
  border-image: initial;
  background: inherit;
  color: inherit;
  width: inherit;
  height: calc(2.5em * 1);
  font-size: calc(1rem * 1);
  border-style: solid;
  border-radius: calc(0.375rem * 1);
  padding-inline-start: calc(1rem * 1);
  padding-inline-end: calc(1rem * 1);
  border-color: hsla(215,19%,35%,1);
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  pointer-events: none;
  width: auto;
  white-space: nowrap;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  background-color: hsla(215,25%,27%,1);
  color: hsla(215,20%,65%,1);
  font-weight: 500;
}

.c1::-webkit-input-placeholder {
  color: hsla(215,16%,47%,1);
  opacity: 1;
}

.c1::-moz-placeholder {
  color: hsla(215,16%,47%,1);
  opacity: 1;
}

.c1:-ms-input-placeholder {
  color: hsla(215,16%,47%,1);
  opacity: 1;
}

.c1::placeholder {
  color: hsla(215,16%,47%,1);
  opacity: 1;
}

.c1:-ms-input-placeholder {
  color: hsla(215,16%,47%,1);
}

.c1::-ms-input-placeholder {
  color: hsla(215,16%,47%,1);
}

.c1:hover {
  border-color: hsla(215,20%,65%,1);
}

.c1:focus-visible {
  z-index: 1;
  border-color: hsla(217,91%,60%,1);
  box-shadow: hsla(217,91%,60%,1) 0px 0px 0px 1px;
}

<body>
    <div>
      <div
        class="c0"
        role="group"
      >
        <div
          class="c1"
        >
          https://
        </div>
        <div
          class="c2"
        >
          <input
            class="c3"
            placeholder="google"
            role="form"
          />
        </div>
        <div
          class="c1"
        >
          .com
        </div>
      </div>
      <div
        class="c0"
        role="group"
      >
        <div
          class="c1"
        >
          https://
        </div>
        <div
          class="c2"
        >
          <input
            class="c3"
            placeholder="google.com"
            role="form"
          />
        </div>
      </div>
      <div
        class="c0"
        role="group"
      >
        <div
          class="c2"
        >
          <input
            class="c3"
            placeholder="google"
            role="form"
          />
        </div>
        <div
          class="c1"
        >
          .com
        </div>
      </div>
    </div>
  </body>,
  "container": .c2 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  width: 100%;
}

.c3 {
  min-width: 0px;
  outline: transparent solid 2px;
  outline-offset: 2px;
  position: relative;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  -webkit-transition-property: background-color,border-color,color,fill,stroke,opacity,box-shadow,-webkit-transform;
  -webkit-transition-property: background-color,border-color,color,fill,stroke,opacity,box-shadow,transform;
  transition-property: background-color,border-color,color,fill,stroke,opacity,box-shadow,transform;
  -webkit-transition-duration: 200ms;
  transition-duration: 200ms;
  border-width: 1px;
  border-image: initial;
  background: inherit;
  color: inherit;
  width: inherit;
  height: calc(2.5em * 1);
  font-size: calc(1rem * 1);
  border-style: solid;
  border-radius: calc(0.375rem * 1);
  padding-inline-start: calc(1rem * 1);
  padding-inline-end: calc(1rem * 1);
  border-color: hsla(215,19%,35%,1);
}

.c3::-webkit-input-placeholder {
  color: hsla(215,16%,47%,1);
  opacity: 1;
}

.c3::-moz-placeholder {
  color: hsla(215,16%,47%,1);
  opacity: 1;
}

.c3:-ms-input-placeholder {
  color: hsla(215,16%,47%,1);
  opacity: 1;
}

.c3::placeholder {
  color: hsla(215,16%,47%,1);
  opacity: 1;
}

.c3:-ms-input-placeholder {
  color: hsla(215,16%,47%,1);
}

.c3::-ms-input-placeholder {
  color: hsla(215,16%,47%,1);
}

.c3:hover {
  border-color: hsla(215,20%,65%,1);
}

.c3:focus-visible {
  z-index: 1;
  border-color: hsla(217,91%,60%,1);
  box-shadow: hsla(217,91%,60%,1) 0px 0px 0px 1px;
}

.c0 {
  width: 100%;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  position: relative;
  isolation: isolate;
}

.c0 > :first-child,
.c0 > :first-child input {
  border-top-right-radius: 0 !important;
  border-bottom-right-radius: 0 !important;
}

.c0 > :first-child {
  border-right: 0 !important;
}

.c0 > :last-child,
.c0 > :last-child input {
  border-top-left-radius: 0 !important;
  border-bottom-left-radius: 0 !important;
}

.c0 > :last-child {
  border-left: 0 !important;
}

.c0 > :not(:first-child):not(:last-child),
.c0 > :not(:first-child):not(:last-child) input {
  border-radius: 0 !important;
}

.c1 {
  min-width: 0px;
  outline: transparent solid 2px;
  outline-offset: 2px;
  position: relative;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  -webkit-transition-property: background-color,border-color,color,fill,stroke,opacity,box-shadow,-webkit-transform;
  -webkit-transition-property: background-color,border-color,color,fill,stroke,opacity,box-shadow,transform;
  transition-property: background-color,border-color,color,fill,stroke,opacity,box-shadow,transform;
  -webkit-transition-duration: 200ms;
  transition-duration: 200ms;
  border-width: 1px;
  border-image: initial;
  background: inherit;
  color: inherit;
  width: inherit;
  height: calc(2.5em * 1);
  font-size: calc(1rem * 1);
  border-style: solid;
  border-radius: calc(0.375rem * 1);
  padding-inline-start: calc(1rem * 1);
  padding-inline-end: calc(1rem * 1);
  border-color: hsla(215,19%,35%,1);
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  pointer-events: none;
  width: auto;
  white-space: nowrap;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  background-color: hsla(215,25%,27%,1);
  color: hsla(215,20%,65%,1);
  font-weight: 500;
}

.c1::-webkit-input-placeholder {
  color: hsla(215,16%,47%,1);
  opacity: 1;
}

.c1::-moz-placeholder {
  color: hsla(215,16%,47%,1);
  opacity: 1;
}

.c1:-ms-input-placeholder {
  color: hsla(215,16%,47%,1);
  opacity: 1;
}

.c1::placeholder {
  color: hsla(215,16%,47%,1);
  opacity: 1;
}

.c1:-ms-input-placeholder {
  color: hsla(215,16%,47%,1);
}

.c1::-ms-input-placeholder {
  color: hsla(215,16%,47%,1);
}

.c1:hover {
  border-color: hsla(215,20%,65%,1);
}

.c1:focus-visible {
  z-index: 1;
  border-color: hsla(217,91%,60%,1);
  box-shadow: hsla(217,91%,60%,1) 0px 0px 0px 1px;
}

<div>
    <div
      class="c0"
      role="group"
    >
      <div
        class="c1"
      >
        https://
      </div>
      <div
        class="c2"
      >
        <input
          class="c3"
          placeholder="google"
          role="form"
        />
      </div>
      <div
        class="c1"
      >
        .com
      </div>
    </div>
    <div
      class="c0"
      role="group"
    >
      <div
        class="c1"
      >
        https://
      </div>
      <div
        class="c2"
      >
        <input
          class="c3"
          placeholder="google.com"
          role="form"
        />
      </div>
    </div>
    <div
      class="c0"
      role="group"
    >
      <div
        class="c2"
      >
        <input
          class="c3"
          placeholder="google"
          role="form"
        />
      </div>
      <div
        class="c1"
      >
        .com
      </div>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;
